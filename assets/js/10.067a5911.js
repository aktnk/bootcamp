(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{361:function(t,a,e){t.exports=e.p+"assets/img/git_stage.0ed2f694.svg"},405:function(t,a,e){"use strict";e.r(a);var s=e(42),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("header-table"),t._v(" "),s("h1",{attrs:{id:"gitの使い方"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitの使い方"}},[t._v("#")]),t._v(" Gitの使い方")]),t._v(" "),s("h2",{attrs:{id:"_0-まえがきと事前準備"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-まえがきと事前準備"}},[t._v("#")]),t._v(" 0. まえがきと事前準備")]),t._v(" "),s("h3",{attrs:{id:"_0-1-この講義の目的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-1-この講義の目的"}},[t._v("#")]),t._v(" 0.1. この講義の目的")]),t._v(" "),s("p",[t._v("バージョン管理システムとしてgitを利用し、"),s("strong",[t._v("変更")]),t._v("を管理することの大切さを学び、\ngitとgithubを使った基本的なソフトウェア開発サイクルを回せるようになることがこの講義の目的です。")]),t._v(" "),s("h3",{attrs:{id:"_0-2-対象の読者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-2-対象の読者"}},[t._v("#")]),t._v(" 0.2. 対象の読者")]),t._v(" "),s("p",[t._v("これからプログラムを書く、またはテキストファイルによる設定ファイル、マニュアル、仕様書などを記述する可能性のある技術者を対象としています。")]),t._v(" "),s("p",[t._v("講義にあたって事前に以下の要件を満たすようにしてください。")]),t._v(" "),s("ul",[s("li",[t._v("以下のコマンドを使えること\n"),s("ul",[s("li",[t._v("ls, cd, mkdir")])])]),t._v(" "),s("li",[t._v("vi(m), emacs, nanoのいずれかでテキスト編集ができること")])]),t._v(" "),s("h3",{attrs:{id:"_0-3-この講義で取り扱わないこと"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-3-この講義で取り扱わないこと"}},[t._v("#")]),t._v(" 0.3. この講義で取り扱わないこと")]),t._v(" "),s("ul",[s("li",[t._v("RCS（Revision Control System）、Subversionなどのバージョン管理システム")])]),t._v(" "),s("h3",{attrs:{id:"_0-4-事前準備"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-4-事前準備"}},[t._v("#")]),t._v(" 0.4. 事前準備")]),t._v(" "),s("p",[t._v("この講義では実際にgitコマンドを操作しながら覚えてもらいます。\n事前に自分のPCにgitをインストールして使えるようにしておきましょう。")]),t._v(" "),s("p",[t._v("ダウンロード元: "),s("a",{attrs:{href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git - Downloads"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("各OSごとのインストール方法は"),s("a",{attrs:{href:"https://git-scm.com/book/ja/v2/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pro Git"),s("OutboundLink")],1),t._v("\nを参照してください、")]),t._v(" "),s("p",[t._v("以下のようにしてgitコマンドが実行できることを確認しておきましょう。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" --version\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" version "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.21")]),t._v(".0\n")])])]),s("p",[t._v("インストールがうまトファイルの文字コードはUTF-8で作くいかなかった人は講義の前に申し出てください。\nバージョンは2以上のものであればどのバージョンでも構いませんが、なるべく最新版を入れるようにしてください。")]),t._v(" "),s("h2",{attrs:{id:"_1-バージョン管理システムとは"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-バージョン管理システムとは"}},[t._v("#")]),t._v(" 1. バージョン管理システムとは")]),t._v(" "),s("p",[t._v("バージョン管理システム(Version Control System, VCS)とは、\nファイルの「変更」を記録し、"),s("strong",[t._v("誰が")]),t._v("、"),s("strong",[t._v("いつ")]),t._v("、"),s("strong",[t._v("どんな変更を")]),t._v("行ったかを参照することができるようにするソフトウェアのことです。\nVCSにはたくさんの種類がありましたが戦国時代を経て、現在ではgitがデファクトスタンダードと言ってもよい状況となっています。")]),t._v(" "),s("h3",{attrs:{id:"_1-1-たくさんのバージョン管理システム"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-たくさんのバージョン管理システム"}},[t._v("#")]),t._v(" 1.1. たくさんのバージョン管理システム")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("git"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.mercurial-scm.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mercurial"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://subversion.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apache Subversion"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("Visual SourceSafe")]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.bitkeeper.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("BitKeeper"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.gnu.org/software/rcs/rcs.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RCS"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("ではなぜVCSを使うとどんないいことがあるのでしょうか？")]),t._v(" "),s("p",[t._v("まず、最新の状態が一目瞭然です。もう"),s("code",[t._v("最新_コピー(2)_修正版")]),t._v("のようなファイル名を付ける必要はありません。\nいつでも任意の時点の内容にファイルを戻すことができますので安心してファイルを上書きすることができます。")]),t._v(" "),s("p",[t._v("また問題が発生した場合にいつから発生していたのかを調べたり、昔のファイルに戻して復旧させたり、\nコードを書いた人を調べて直接質問しに行ったり")]),t._v(" "),s("h2",{attrs:{id:"_2-gitの初期設定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-gitの初期設定"}},[t._v("#")]),t._v(" 2. gitの初期設定")]),t._v(" "),s("p",[t._v("まずは自分の情報を登録しましょう。")]),t._v(" "),s("p",[t._v("自分の名前とメールアドレスします。\n"),s("code",[t._v("--global")]),t._v("オプションをつけているので、あらゆるリポジトリでこの設定が有効になります。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  $ git config --global user.name 'Kazuki Hamasaki'\n  $ git config --global user.email 'kazuki-h@iij.ad.jp'\n")])])]),s("p",[t._v("登録した情報を確認してみましょう。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git config -l\n")])])]),s("p",[t._v("今後コードの変更を行うとその変更の作者を示す情報として、この情報が使用されます。")]),t._v(" "),s("h2",{attrs:{id:"_3-リポジトリを作成する"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-リポジトリを作成する"}},[t._v("#")]),t._v(" 3. リポジトリを作成する")]),t._v(" "),s("p",[t._v("ファイルやディレクトリを記録するための場所のことを "),s("strong",[t._v("リポジトリ(Repository)")]),t._v(" と呼びます。\n1つのソフトウェアで1つのリポジトリとすることが多いです。\nEclipseのProjectや、Visual StudioのSolutionの単位と同じと考えてもらうのがよいです。")]),t._v(" "),s("p",[t._v("なにはともあれ、リポジトリがないと始まりません。\n以下の手順でリポジトリを作成してください。")]),t._v(" "),s("ul",[s("li",[t._v("好きな場所にディレクトリを作成し、移動する")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ mkdir git_handson\n$ cd git_handson\n")])])]),s("ul",[s("li",[t._v("このディレクトリをgitリポジトリとして初期化する")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git init\n")])])]),s("p",[t._v("これであなたのいるディレクトリはgitリポジトリとなりました。")]),t._v(" "),s("h2",{attrs:{id:"_4-gitの基本-変更の記録"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-gitの基本-変更の記録"}},[t._v("#")]),t._v(" 4. Gitの基本 変更の記録")]),t._v(" "),s("p",[s("img",{attrs:{src:e(361),alt:"gitで管理されるファイルの状態"}})]),t._v(" "),s("p",[t._v("リポジトリの中にgitで変更を管理しないファイルを置いておくこともできます。\ngitで変更を管理することを"),s("code",[t._v("追跡(track)")]),t._v("と呼びます。\n追跡されていないファイルは"),s("code",[t._v("Untrack")]),t._v("です。")]),t._v(" "),s("p",[t._v("追跡されてるファイルは"),s("code",[t._v("Unmodified")]),t._v("、"),s("code",[t._v("Modified")]),t._v("、"),s("code",[t._v("Staged")]),t._v("の3つの状態で管理します。")]),t._v(" "),s("ul",[s("li",[t._v("Unmodified\n"),s("ul",[s("li",[t._v("変更されていないファイル")])])]),t._v(" "),s("li",[t._v("Modified\n"),s("ul",[s("li",[t._v("変更されたファイル")])])]),t._v(" "),s("li",[t._v("Staged\n"),s("ul",[s("li",[t._v("ステージされているファイル")])])])]),t._v(" "),s("p",[t._v("変更したファイルはステージングエリアに乗せます。\nステージングエリアに乗っているファイルがまとめてひとつの変更として記録されます。\nファイルの変更を記録することを "),s("strong",[t._v("コミット(Commit)")]),t._v(" と呼びます。")]),t._v(" "),s("h3",{attrs:{id:"_4-1-コミットする"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-コミットする"}},[t._v("#")]),t._v(" 4.1. コミットする")]),t._v(" "),s("p",[t._v("ファイルを作成して、さっそくコミットしましょう。")]),t._v(" "),s("ul",[s("li",[t._v("以下の内容のファイルを作成する。（お好きなエディタでどうぞ！）")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("テキストファイルの文字コードはUTF-8で作成しましょう。このあとの操作で文字化けすることがあります。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ vim hello.txt\n")])])]),s("p",[t._v("※typo していますが、そのまま記述してください。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("おはよう ぎっと\nこんにちは ぎっと\nこんばんは じっと\n")])])]),s("p",[t._v("gitがファイルをどのように扱っているか確認してみましょう。")]),t._v(" "),s("ul",[s("li",[t._v("ファイルの状態を確認する")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git status\n")])])]),s("p",[t._v("以下のように表示されます。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('Untracked files:\n  (use "git add <file>..." to include in what will be committed)\n\n\thello.txt\n\nnothing added to commit but untracked files present (use "git add" to track)\n')])])]),s("p",[t._v("リポジトリの中にファイルを置いただけで追跡されるわけではありません。\nそのためファイルを新しく作った場合には"),s("code",[t._v("Untracked")]),t._v("に表示されます。")]),t._v(" "),s("p",[s("code",[t._v("hello.txt")]),t._v("への変更を記録するためにはまずステージングエリアに登録する必要があります。")]),t._v(" "),s("ul",[s("li",[t._v("コミットしたいファイルをステージングエリアへ登録する")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git add hello.txt\n")])])]),s("ul",[s("li",[t._v("ファイルが"),s("code",[t._v("Staged")]),t._v("として登録されていることを確認する")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git status\n")])])]),s("ul",[s("li",[t._v("ステージングエリアのファイルをコミットする")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git commit\n")])])]),s("p",[t._v("コミット時にはメッセージを記入することができ、これを"),s("strong",[t._v("コミットメッセージ")]),t._v("と呼びます。\nあとから見たときにどのような変更を入れたかわかりやすくするためのものです。")]),t._v(" "),s("ul",[s("li",[t._v("テキストエディタが起動するので、コミットメッセージを記入します。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  1 はじめてのgit\n  2\n  3 # Please enter the commit message for your changes. Lines starting\n  4 # with '#' will be ignored, and an empty message aborts the commit.\n  5 #\n  6 # Date:      Wed Jun 26 22:08:30 2019 +0900\n  7 #\n  8 # On branch master\n  9 #\n 10 # Initial commit\n 11 #\n 12 # Changes to be committed:\n 13 #   new file:   hello.txt\n 14 #\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("nanoが起動して困りましたか？\n好きなエディターを使いたい場合は以下のように設定します。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git config --global core.editor 'vim -c \"set fenc=utf-8\"'\n")])])]),s("p",[t._v("atomを使いたい人は"),s("code",[t._v("--wait")]),t._v("オプションが必要です。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('git config --global core.editor "atom --wait"\n')])])])]),t._v(" "),s("h4",{attrs:{id:"_4-1-1-コミットメッセージには理由を書こう"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-コミットメッセージには理由を書こう"}},[t._v("#")]),t._v(" 4.1.1. コミットメッセージには理由を書こう")]),t._v(" "),s("p",[t._v("コミットメッセージには"),s("strong",[t._v("なぜその修正を入れたのか")]),t._v("理由を書くようにしましょう。")]),t._v(" "),s("p",[t._v("どんな修正を入れたかは履歴を見れば確認できます。\nなぜその修正を入れる必要があったかは往々にしてコードには現れません。\nそれを残しておくための場所がコミットメッセージです。")]),t._v(" "),s("h3",{attrs:{id:"_4-2-コミットの確認"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-コミットの確認"}},[t._v("#")]),t._v(" 4.2. コミットの確認")]),t._v(" "),s("ul",[s("li",[t._v("歴史が刻まれていることを確認します。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git log\n\ncommit b8490bfc83a2c91bac6772b2f9e533ccf2455baf (HEAD -> master)\nAuthor: Kazuki Hamasaki <kazuki-h@iij.ad.jp>\nDate:   Wed Jun 26 22:08:30 2019 +0900\n\n    はじめてのgit\n")])])]),s("p",[s("code",[t._v("commit")]),t._v("はコミットごとに発行される一意のIDでコミットハッシュ値と呼ばれています。\n"),s("code",[t._v("Author")]),t._v("はコミットを作成した人です。「2. gitの初期設定」で設定した値が使われているはずです。\n"),s("code",[t._v("Data")]),t._v("はコミット日時ですね。\nその下にはコミットコメントが表示されています。")]),t._v(" "),s("p",[t._v("でもどんな変更を入れたか表示されていませんね。")]),t._v(" "),s("ul",[s("li",[t._v("前回のコミットの内容を表示してみる")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git show\n")])])]),s("p",[s("code",[t._v("git show")]),t._v("では変更に関する差分のみが表示されます。\nここの差分はユニファイド形式になっています。\n"),s("code",[t._v("+")]),t._v("が追加された行、"),s("code",[t._v("-")]),t._v("が削除された行です。\nファイルがまるごと追加されたため、すべての行が追加されたという表示になっています。")]),t._v(" "),s("p",[t._v("よく見たら"),s("a",{attrs:{href:"http://e-words.jp/w/%E3%82%BF%E3%82%A4%E3%83%9D.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("typo"),s("OutboundLink")],1),t._v("してますよね。直してみましょう。")]),t._v(" "),s("h3",{attrs:{id:"_4-3-さらにコミットを積み重ねる"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-さらにコミットを積み重ねる"}},[t._v("#")]),t._v(" 4.3. さらにコミットを積み重ねる")]),t._v(" "),s("ul",[s("li",[t._v("typo を直しましょう")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ vim hello.txt\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("おはよう ぎっと\nこんにちは ぎっと\nこんばんは ぎっと\n")])])]),s("ul",[s("li",[t._v("コミットする前に、前コミットとの変更差分をみてみます。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git diff\n")])])]),s("p",[t._v("タイポだけを直せていますか？")]),t._v(" "),s("ul",[s("li",[t._v("問題なければコミットします")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git add hello.txt\n$ git status\n$ git commit\n")])])]),s("ul",[s("li",[t._v("コミットの確認")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git log\n$ git show\n")])])]),s("p",[t._v("コミットの履歴と差分をまとめて見るには"),s("code",[t._v("git log")]),t._v("の"),s("code",[t._v("-p")]),t._v("オプションが利用できます。")]),t._v(" "),s("ul",[s("li",[t._v("コミットの履歴と差分をまとめて確認する")])]),t._v(" "),s("p",[s("code",[t._v("git log -p")])]),t._v(" "),s("h2",{attrs:{id:"_5-ブランチ"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-ブランチ"}},[t._v("#")]),t._v(" 5. ブランチ")]),t._v(" "),s("h3",{attrs:{id:"_5-1-実はあなたは今、-master-というブランチにいます"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-実はあなたは今、-master-というブランチにいます"}},[t._v("#")]),t._v(' 5.1. 実はあなたは今、"master"というブランチにいます')]),t._v(" "),s("p",[s("code",[t._v("ブランチ(Branch)")]),t._v('とは、履歴の流れを分岐させて記録する仕組みです。\nGitリポジトリを作成すると、自動的に"master"ブランチが一つ作成されています。')]),t._v(" "),s("ul",[s("li",[t._v("現在のブランチを確認してみましょう")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git branch\n")])])]),s("p",[t._v('"*" は現在のブランチを指しています')]),t._v(" "),s("p",[t._v('ブランチの切り方としては、作業内容単位で切っていくのが一般的です。\n何か作業をするときはとりあえずブランチを切ってそこで作業を行い、\n完了しだい"master"ブランチに反映させます。')]),t._v(" "),s("p",[t._v('"master"ブランチをそのままメインブランチとして扱うことが多いです。\n今回もその慣習に従います。')]),t._v(" "),s("h3",{attrs:{id:"_5-2-新たな-branch-を作る"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-新たな-branch-を作る"}},[t._v("#")]),t._v(" 5.2. 新たな Branch を作る")]),t._v(" "),s("p",[t._v('今度は "ぎっと" を "Git" に直したい。\nせっかくなので別のブランチで作業してみましょう。')]),t._v(" "),s("ul",[s("li",[t._v('"fix"というブランチを作成してみます。')])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git branch fix\n")])])]),s("ul",[s("li",[t._v("ブランチを確認する")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git branch\n")])])]),s("p",[t._v('"fix"ブランチを作成したものの、\nあなたはまだ "master"ブランチにいるままです。')]),t._v(" "),s("h3",{attrs:{id:"_5-3-ブランチを移動する"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-ブランチを移動する"}},[t._v("#")]),t._v(" 5.3. ブランチを移動する")]),t._v(" "),s("ul",[s("li",[t._v('"fix" Branch に移動するために Checkout する')])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git checkout fix\n")])])]),s("ul",[s("li",[t._v("現在のブランチを確認する")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git branch\n")])])]),s("p",[t._v('" * " が "fix" を指すようになりましたね?')]),t._v(" "),s("ul",[s("li",[t._v("コミットを確認してみる")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git log\n")])])]),s("p",[t._v('ブランチを作成した時点での"master"ブランチのコミットが引き継がれているはずです。')]),t._v(" "),s("h3",{attrs:{id:"_5-4-fix-ブランチで-commit-する"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-fix-ブランチで-commit-する"}},[t._v("#")]),t._v(' 5.4. "fix"ブランチで Commit する')]),t._v(" "),s("ul",[s("li",[t._v("ファイルを書き換える")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ vim hello.txt\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("おはよう Git\nこんにちは Git\nこんばんは Git\n")])])]),s("ul",[s("li",[t._v("Commit する")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git add hello.txt\n$ git status\n$ git commit\n")])])]),s("ul",[s("li",[t._v("確認する")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git log\n$ git show\n")])])]),s("p",[t._v('これで "fix"ブランチで Commit を積むことができました。\n"master"ブランチに戻るとどう見えるでしょう。')]),t._v(" "),s("h3",{attrs:{id:"_5-5-master-ブランチへ戻る"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-master-ブランチへ戻る"}},[t._v("#")]),t._v(' 5.5. "master"ブランチへ戻る')]),t._v(" "),s("ul",[s("li",[t._v('"master" へ移動するために Checkout します')])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git checkout master\n")])])]),s("ul",[s("li",[t._v('"master"ブランチの履歴を見る')])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git log\n$ git show\n")])])]),s("p",[t._v('先ほどの Commit は"fix"ブランチで行ったものなので、当然見えません。')]),t._v(" "),s("h3",{attrs:{id:"_5-6-merge-する"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-merge-する"}},[t._v("#")]),t._v(" 5.6. Merge する")]),t._v(" "),s("p",[t._v('"master"ブランチに "fix"ブランチの変更を取り込みます。')]),t._v(" "),s("ul",[s("li",[t._v('"fix"ブランチの変更内容を、メインである"master"ブランチへ取り込みましょう')])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git merge fix\n")])])]),s("ul",[s("li",[t._v("確認してみましょう")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ git log\n$ git show\n")])])]),s("p",[t._v('"fix"ブランチで行ったコミットが取り込まれていれば問題ありません。')]),t._v(" "),s("p",[t._v("Git の基本操作をひと通り流してやってみました。\nGit ハンズオンは以上で終了です。")]),t._v(" "),s("h2",{attrs:{id:"_6-参考文献"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-参考文献"}},[t._v("#")]),t._v(" 6. 参考文献")]),t._v(" "),s("p",[t._v("さらに高度な使い方を知りたい方は"),s("a",{attrs:{href:"https://git-scm.com/book/ja/v2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pro Git"),s("OutboundLink")],1),t._v("が便利です。日本語版が公開されています。")])],1)}),[],!1,null,null,null);a.default=r.exports}}]);