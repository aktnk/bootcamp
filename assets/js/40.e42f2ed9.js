(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{442:function(t,a,s){"use strict";s.r(a);var e=s(10),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("header-table"),t._v(" "),a("h2",{attrs:{id:"dodkerイメージの作成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dodkerイメージの作成"}},[t._v("#")]),t._v(" Dodkerイメージの作成")]),t._v(" "),a("p",[t._v("Docker では、「"),a("strong",[t._v("Dockerfile")]),t._v("」というファイルを用いて、Docker イメージの作成を行うことができます。Dockerfile は専用言語で記述します。このようにコンテナを初めとするサーバ環境やミドルウェアなどをコード（プログラム、設定ファイルなど）で構成管理することを「"),a("strong",[t._v("Infrastructure as Code（IaC）")]),t._v("」と呼びます。Dockerfile のように環境をコード化して管理することにより、以下のようなメリットが挙げられます。")]),t._v(" "),a("ul",[a("li",[t._v("新規メンバーの開発環境が、Dockerfile を共有するだけで構築可能")]),t._v(" "),a("li",[t._v("複雑なインフラ環境がテキストベースで管理でき、git 等での管理が容易に")]),t._v(" "),a("li",[t._v("構築手順などがコード化されるため、漏れや間違いが発見しやすくなる")])]),t._v(" "),a("p",[t._v("今回は、ubuntu というDocker イメージを元にカスタマイズしながら、nginx によるWeb サーバのDocker イメージを作成します。また、作成したDocker イメージを使ってDocker コンテナを立ち上げ、HTML ファイルがレスポンスされることを確認します。")]),t._v(" "),a("p",[t._v("では、実際にDockerfile を作成し、Docker イメージを作成していきましょう。以下の内容をファイル名「Dockerfile」として作成してください。")]),t._v(" "),a("div",{staticClass:"language-Dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" ubuntu")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LABEL")]),t._v(" maintainer="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your_email"')])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" apt-get update && "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),t._v("\n    apt-get install nginx -y && "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),t._v("\n    rm /var/www/html/index.nginx-debian.html")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" index.html /var/www/html/")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 80")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENTRYPOINT")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-g"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"daemon off;"')]),t._v("]")]),t._v("\n")])])]),a("p",[t._v("また、"),a("code",[t._v("COPY")]),t._v(" コマンドで利用する「index.html」を以下のように作成してください（あくまで一例です）。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token doctype"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<!")]),a("span",{pre:!0,attrs:{class:"token doctype-tag"}},[t._v("DOCTYPE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token name"}},[t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("charset")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("utf-8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Hello world"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("IIJ Boot Camp"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Hello World from docker container!!"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("作成したDockerfile の内容を先頭から読み解いていきましょう。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("FROM")]),t._v(" 命令は、ベースとなるDocker イメージを設定する命令です。今回は、ubuntu を利用しています。Dockerfile は必ず"),a("code",[t._v("FROM")]),t._v(" 命令から始まっていなければなりません。")]),t._v(" "),a("li",[a("code",[t._v("LABEL")]),t._v(" 命令は、Docker イメージにメタデータを付加するときに利用します。今回は、"),a("code",[t._v("maintainer")]),t._v(" つまり管理者を追加しています。昔のDockerfile においては、"),a("code",[t._v("MAINTAINER")]),t._v(" 命令を使って設定していましたが、現在は非推奨となっています。")]),t._v(" "),a("li",[a("code",[t._v("RUN")]),t._v(" 命令は、Dockerfile の中でもとても重要な命令で、Docker イメージ作成時に実行する命令を記述します。今回はパッケージのアップデートとnginx のインストール、nginx のデフォルトウェブページであるHTML ファイルの削除を行っています。この行で重要なのは、"),a("strong",[t._v("&&")]),t._v(" で繋いで実行している点です。Dockerfile からDocker イメージを作成する際、"),a("code",[t._v("RUN")]),t._v(" 命令などの実行した状態をキャッシュとして保存します。そのため、"),a("code",[t._v("apt-get update")]),t._v(" と"),a("code",[t._v("apt-get install nginx -y")]),t._v(" が異なる行で書かれていると、新しくパッケージを追加するために、"),a("code",[t._v("apt-get install nginx -y")]),t._v("の行を更新して、再度Docker イメージを作成しようとした際に、"),a("code",[t._v("apt-get update")]),t._v(" で作成されたキャッシュを利用してしまい、"),a("strong",[t._v("最新版ではないnginx やパッケージがインストールされてしまう")]),t._v("可能性があります。")]),t._v(" "),a("li",[a("code",[t._v("COPY")]),t._v(" 命令は、ローカルにあるファイルなどをコンテナの内部へコピーする際に利用します。")]),t._v(" "),a("li",[a("code",[t._v("EXPOSE")]),t._v(" 命令は、コンテナ実行時にポートで待ち受けることをdocker に伝えます。注意点として、この命令を書いただけでは、ホスト環境からアクセスはできません。実際にアクセスするためには、後述する"),a("code",[t._v("docker run")]),t._v(" コマンドのオプションでポートを設定する必要があります。")]),t._v(" "),a("li",[a("code",[t._v("ENTRYPOINT")]),t._v(" 命令は、"),a("code",[t._v("RUN")]),t._v(" 命令と異なり、Dockerイメージから実際のコンテナを作成する際に実行されます。")])]),t._v(" "),a("p",[t._v("その他詳しい機能について知りたい方は、"),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/",target:"_blank",rel:"noopener noreferrer"}},[t._v("公式のリファレンス"),a("OutboundLink")],1),t._v("をご参照ください。")]),t._v(" "),a("p",[t._v("では、先ほど作成したDockerfileが存在するディレクトリ内で以下のコマンドを実行してください。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" build -t iijbootcamp "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),a("p",[t._v("このコマンドによって、Dockerfile からDocker イメージが作成されます。"),a("code",[t._v("-t")]),t._v(" オプションでイメージ名を決めることができます。また、最後の"),a("code",[t._v(".")]),t._v(" は、Dockerfile が存在するディレクトリ（カレントディレクトリ）を意味しています。")]),t._v(" "),a("p",[t._v("実際にDockerイメージが作成されているかコマンドで確認してみてください。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" images\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\niijbootcamp         latest              417ab982faaa        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" days ago          170MB\nubuntu              latest              93fd78260bd1        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" days ago          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("86")]),t._v(".2MB\n")])])]),a("p",[t._v("「REPOSITORY」がubuntu とiijbootcamp の２つのイメージが新たに作られていると思います。ubuntu は"),a("code",[t._v("FROM")]),t._v(" で指定したDocker イメージです。iijbootcamp は、ubuntu のDocker イメージを元にnginx やHTML ファイルを追加して今回作成したDocker イメージです。")]),t._v(" "),a("p",[t._v("では、実際にこのコンテナを起動してアクセスしてみましょう。次のコマンドを実行してください。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8888")]),t._v(":80 iijbootcamp\n")])])]),a("p",[a("code",[t._v("-d")]),t._v(" オプションはコンテナをデタッチドモードで起動することを意味しています。また、nginx はデフォルトでデーモンとして起動してしまうため、Dockerfile ではnginx をデーモンとして起動しないオプションで起動しています。また、"),a("code",[t._v("-p")]),t._v(" オプションでは、ホスト側とコンテナ側のポートを対応付けています。「:」の左側がホスト環境、右側がコンテナ環境のポートを示しており、"),a("strong",[t._v("ホスト環境の8888ポートへアクセスすると、コンテナの80ポートにつながる")]),t._v("ようになっています。")]),t._v(" "),a("p",[t._v("コンテナが起動していることを確認してください。正しく実行されていると以下のような画面が表示されます。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v("\nCONTAINER ID        IMAGE                      COMMAND                  CREATED             STATUS              PORTS                      NAMES\n171c3b25c75e        iijbootcamp:latest         "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx -g \'daemon of…"')]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" minutes ago      Up "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" minutes       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:8888-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("/tcp       condescending_wilson\n")])])]),a("p",[t._v("では、実際にコンテナに対してアクセスしてみましょう。お好きな方法（Webブラウザでもcurlコマンド等でも)で「 "),a("a",{attrs:{href:"http://localhost:8888",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8888"),a("OutboundLink")],1),t._v(" 」にアクセスしてみましょう。以下にcurl コマンドを用いた例を示します。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" http://localhost:8888\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("DOCTYPE html"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("head"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("meta "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("charset")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf-8"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("title"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Hello world"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/title"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/head"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v("IIJ Boot Camp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/h"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Hello World from "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" container"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/body"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/html"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("上記のように実際に作成したHTMLが表示されていれば成功です。\nプロキシを設定している場合は下記のように"),a("code",[t._v("--noproxy")]),t._v("オプションを指定する必要があります。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" --noproxy localhost http://localhost:8888\n")])])]),a("p",[a("strong",[t._v("curlコマンドによってHTMLが取得できることを確認してください")])]),t._v(" "),a("h2",{attrs:{id:"docker-イメージの共有方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-イメージの共有方法"}},[t._v("#")]),t._v(" Docker イメージの共有方法")]),t._v(" "),a("p",[t._v("皆さんが作成したDocker イメージなどを他の人に共有したい場合、Dockerfile をファイルサーバやGitHub 等で共有する以外に、"),a("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Hub"),a("OutboundLink")],1),t._v("を始めとする「"),a("strong",[t._v("Docker イメージレジストリ")]),t._v("」で公開し、それを利用してもらうことが可能です。例えば、本講義で利用した「getting-started」や「ubuntu」のDocker イメージは、Docker Hubで公開されているものを利用しています。")]),t._v(" "),a("p",[t._v("Docker イメージレジストリに自分のDocker イメージを公開する際には、"),a("code",[t._v("docker push")]),t._v(" コマンドを利用します。逆に、Docker イメージをダウンロードしたい場合は、"),a("code",[t._v("docker pull")]),t._v(" コマンドを利用します。また、Dockerイメージを"),a("code",[t._v("docker save")]),t._v(" コマンドでtarファイルとして保存し、"),a("code",[t._v("docker load")]),t._v(" コマンドでtarからロードするといったことも行うことができます。")]),t._v(" "),a("h2",{attrs:{id:"まとめ"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#まとめ"}},[t._v("#")]),t._v(" まとめ")]),t._v(" "),a("p",[t._v("今回は、仮想環境プラットフォームであるDocker を実際に触っていただきました。Docker の基礎知識、Docker コンテナ、イメージの管理方法に加え、Dockerfile を作成し自身でコンテナを作っていただきました。仮想マシンに比べ軽く高速で作成することが可能なため使いどころは多いでしょう。しかしながら、実際のサービスでは、単一のアプリケーションのみで1つのコンテナで完成することはありえません。Web サーバやWeb アプリケーション、データベースなど様々なものが１つに組み合わさって初めてサービスとして完成します。Docker コンテナでは、「1コンテナ1プロセス」や「1コンテナ1ロール」が基本となっています。そのため複数のコンテナを組み合わせて構築する必要があります。次の講義「開発環境をdocker-composeで構築」では、複数のコンテナを組み合わせて管理する手法について学びます。")]),t._v(" "),a("credit-footer")],1)}),[],!1,null,null,null);a.default=r.exports}}]);