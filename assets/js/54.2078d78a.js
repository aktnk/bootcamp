(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{462:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("header-table"),t._v(" "),s("h1",{attrs:{id:"page-frontmatter-title"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#page-frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$page.frontmatter.title))]),t._v(" "),s("h1",{attrs:{id:"目次"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目次"}},[t._v("#")]),t._v(" 目次")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB"}},[t._v("はじめに")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E6%A6%82%E8%AB%96"}},[t._v("概論")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E3%81%AA%E3%81%9C%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E8%A1%8C%E3%81%86%E3%81%AE%E3%81%8B"}},[t._v("なぜテストを行うのか")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%8A%B9%E7%8E%87%E7%9A%84%E3%81%AA%E3%83%86%E3%82%B9%E3%83%88%E3%81%A8%E3%81%AF"}},[t._v("効率的なテストとは")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E3%81%84%E3%81%A4%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E4%BD%9C%E3%82%8B%E3%81%AE%E3%81%8B"}},[t._v("いつテストを作るのか")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E6%BA%96%E5%82%99"}},[t._v("準備")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#docker%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%AE%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E6%96%B9"}},[t._v("dockerコンテナの立ち上げ方")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E5%AE%9F%E8%A1%8C%E6%96%B9%E6%B3%95"}},[t._v("テストの実行")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E9%96%A2%E6%95%B0%E3%83%BB%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E4%BF%AE%E6%AD%A3%E6%96%B9%E6%B3%95"}},[t._v("関数・テストの修正方法")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B"}},[t._v("テストを実行する")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E5%90%8C%E5%80%A4%E3%82%AF%E3%83%A9%E3%82%B9%E3%83%BB%E5%A2%83%E7%95%8C%E5%80%A4%E3%83%86%E3%82%B9%E3%83%88"}},[t._v("同値クラス・境界値テスト")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#api%E3%81%A8%E9%96%A2%E6%95%B0%E3%81%AE%E3%83%A2%E3%83%83%E3%82%AF"}},[t._v("APIと関数のモック")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#tdd%E3%82%92%E3%82%84%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B"}},[t._v("TDDをやってみる")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB"}},[t._v("おわりに")])])]),t._v(" "),s("br"),t._v(" "),s("h1",{attrs:{id:"はじめに"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#はじめに"}},[t._v("#")]),t._v(" はじめに")]),t._v(" "),s("p",[t._v("本講義はdockerを使用します。"),s("br"),t._v("\ndockerコンテナのpullには時間を要するため、概論の聴講と並行して「準備 ⇒ dockerコンテナの立ち上げ方」を実施することを推奨します。")]),t._v(" "),s("br"),t._v(" "),s("h1",{attrs:{id:"概論"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概論"}},[t._v("#")]),t._v(" 概論")]),t._v(" "),s("h2",{attrs:{id:"なぜテストを行うのか"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#なぜテストを行うのか"}},[t._v("#")]),t._v(" なぜテストを行うのか")]),t._v(" "),s("p",[t._v("昨今ではIT技術が普及し、炊飯器・電子レンジ・洗濯機といった身の回りのものから、航空機や車など、普段の生活に必須になるものにまで。ソフトウェアが使用されています。"),s("br"),t._v("\nまた、世の中に流通しているソフトウェアはテストが実施されており、その挙動で問題が起こらないことを保証されています。")]),t._v(" "),s("br"),t._v(" "),s("p",[t._v("例えばソフトウェアに対し、テストを行われていないと仮定して、個人的に運営しているブログなどで不具合が発生した場合はどうなるでしょうか。"),s("br"),t._v("\nその不具合によってサーバがダウンしている間は、運営者に広告費が入らないなど、ある程度小規模で済みます。"),s("br"),t._v("\n（ブログ収益で生計を立てている場合、致命的ですが。）")]),t._v(" "),s("br"),t._v(" "),s("p",[t._v("例えば自動車や医療機器などで不具合が発生してしまった場合、どうなるでしょうか。"),s("br"),t._v("\n最悪の場合、ブレーキが効かない、医療機器のレーザーの出力が多すぎたなど、ソフトウェアの欠陥によって人命が失われてしまう可能性もあります。")]),t._v(" "),s("br"),t._v(" "),s("p",[t._v("上記2つの例を上げましたが、大なり小なり、ソフトウェアの不具合によって、どこかの誰かが被害を被ってしまいます。"),s("br"),t._v("\nそのため、自身が作成するプログラムでは必ず動作のテストを行い、極力不具合を発生させないソフトウェアを作ることを目指す必要があります。")]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"効率的なテストとは"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#効率的なテストとは"}},[t._v("#")]),t._v(" 効率的なテストとは")]),t._v(" "),s("p",[t._v("テストを作成する場合には、不具合をなくすことも重要ですが、テストにコストをかけないことも重要になります。")]),t._v(" "),s("br"),t._v(" "),s("p",[t._v("例えば、あるプロダクトに使用される、以下のような仕様の関数"),s("code",[t._v("f(x)")]),t._v("があるとします。")]),t._v(" "),s("ul",[s("li",[t._v("関数"),s("code",[t._v("f")]),t._v("は、任意の数字"),s("code",[t._v("x")]),t._v("の値を取ります。")]),t._v(" "),s("li",[t._v("任意の数字"),s("code",[t._v("x")]),t._v("は、int型であり、 "),s("em",[t._v("-2,147,483,648")]),t._v(" から "),s("em",[t._v("2,147,483,647")]),t._v(" の範囲の値を格納できます。")]),t._v(" "),s("li",[t._v("関数"),s("code",[t._v("f")]),t._v("は、与えられた数字が "),s("em",[t._v("0")]),t._v(" から "),s("em",[t._v("100")]),t._v(" の間であれば"),s("code",[t._v("True")]),t._v("、そうでなければ"),s("code",[t._v("False")]),t._v("を返却します。")])]),t._v(" "),s("p",[t._v("上記の"),s("code",[t._v("f(x)")]),t._v("の挙動を100%確かめるためには、 "),s("em",[t._v("4,294,967,296")]),t._v(" 件のテストを行わなければなりません。"),s("br"),t._v("\nしかし、実際のプロダクトを作成する場合、1つの関数に対し40億回もテストを実施してしまうと、プロダクトの売上以上に人件費や計算機の運用コストがかかってしまい、会社は倒産の危機に瀕してしまいます。")]),t._v(" "),s("p",[t._v("そのため、後述する「同値クラス・境界値テスト」などの手法によって、最低限かつ最適な回数でテストを行うことが求められます。")]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"いつテストを作るのか"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#いつテストを作るのか"}},[t._v("#")]),t._v(" いつテストを作るのか")]),t._v(" "),s("p",[t._v("開発を行う際、ウォーターフォール型の開発では、下記の流れになるかと思います。"),s("br"),t._v("\n右下向きの矢印が設計工程、中央が開発工程、右上向きの矢印がテスト工程になります。")]),t._v(" "),s("img",{attrs:{src:"images/figure1.png",width:"500"}}),t._v(" "),s("p",[t._v("設計における各要素は、テスト工程の各要素に対応することになります。"),s("br"),t._v("\n例えば、まずは要求定義を行い、ソフトウェアに必要な要件を決めますが、この時点で明確な要件が定義できているのであれば、システムテストで実施するテスト項目を作成しておくことができます。")]),t._v(" "),s("br"),t._v(" "),s("p",[t._v("このように各設計段階でテスト項目を作成することで、要件に沿ったテストを作成することができます。"),s("br"),t._v("\n（何年も開発を行っているとわかるのですが、ものを作ってからテストを作成すると、「今動くものを通すテスト」を無意識的に書いてしまい、要件も網羅できないテストを作ってしまう傾向が出てきます。）")]),t._v(" "),s("br"),t._v(" "),s("p",[t._v("また、後述するTDD（テスト駆動開発）のように、テストを作成して開発を進める手法もあります。")]),t._v(" "),s("br"),t._v(" "),s("h1",{attrs:{id:"準備"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#準備"}},[t._v("#")]),t._v(" 準備")]),t._v(" "),s("h2",{attrs:{id:"dockerコンテナの立ち上げ方"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerコンテナの立ち上げ方"}},[t._v("#")]),t._v(" dockerコンテナの立ち上げ方")]),t._v(" "),s("p",[t._v("下記のコマンドでdockerコンテナを立ち上げます。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# リポジトリのクローン")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone git@github.com:iij/bootcamp.git\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" bootcamp/src/server-app/test-hands-on\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# コンテナの立ち上げ")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" up --build\n")])])]),s("br"),t._v(" "),s("h2",{attrs:{id:"テストの実行方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#テストの実行方法"}},[t._v("#")]),t._v(" テストの実行方法")]),t._v(" "),s("p",[t._v("この項では、任意の「"),s("a",{attrs:{href:"#%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B"}},[t._v("テストを実行する")]),t._v("」の項のテストを実行します。")]),t._v(" "),s("br"),t._v(" "),s("p",[t._v("「"),s("a",{attrs:{href:"#docker%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%AE%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E6%96%B9"}},[t._v("dockerコンテナの立ち上げ方")]),t._v("」で、起動中のコンソールとは別のコンソールを開き、実行中のコンテナにアクセスします。"),s("br"),t._v("\nコマンドを実行すると、コンテナ内のbashが実行されます。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" bootcamp/src/server-app/test-hands-on\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" bootcamp-test "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n")])])]),s("br"),t._v(" "),s("p",[t._v("下記のコマンドで、テストを実行してみましょう。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# ソースは全て"/test-hands-on"配下にあります。')]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /test-hands-on\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 任意のテストを実行します。")]),t._v("\n$ python -m unittest -v exercises.exercise0.test_challenge\n")])])]),s("br"),t._v(" "),s("h2",{attrs:{id:"関数・テストの修正方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#関数・テストの修正方法"}},[t._v("#")]),t._v(" 関数・テストの修正方法")]),t._v(" "),s("p",[t._v("「テストの実行方法」の項でテストを行うと、初回は下記のようにテストが失敗してしまいます。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ python -m unittest -v exercises.exercise0.test_challenge\ntest_success "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exercises.exercise0.test_challenge.HelloTestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". FAIL\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\nFAIL: test_success "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exercises.exercise0.test_challenge.HelloTestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n----------------------------------------------------------------------\nTraceback "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("most recent call last"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n  File "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test-hands-on/exercises/exercise0/test_challenge.py"')]),t._v(", line "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" test_success\n    self.assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"goodbye world?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nAssertionError: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"goodbye world?"')]),t._v("\n- hello world\n+ goodbye world?\n")])])]),s("br"),t._v(" "),s("p",[t._v("試しに、このテストを修正してみましょう。\nテストソースである、 "),s("code",[t._v("/test-hands-on/exercises/exercise0/test_challenge.py")]),t._v(" を開いてみます。")]),t._v(" "),s("p",[t._v("内容は下記のようになっており、ソース内でimportしている "),s("code",[t._v("hello()")]),t._v(' 関数に対し、文字列"goodbye world?"が来ることを期待してテストを行っているようです。')]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" unittest\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("challenge "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" hello\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloTestCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unittest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_success")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"goodbye world?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("br"),t._v(" "),s("p",[t._v("では、テスト対象である "),s("code",[t._v("hello()")]),t._v(" 関数を見てみましょう。"),s("br"),t._v('\nどうやら、この関数は文字列"hello world"を返すようです。')]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v("\n")])])]),s("br"),t._v(" "),s("p",[t._v("しかし、これではテストソースで期待されている関数の返り値と、実際の関数の返り値が異なってしまっています。"),s("br"),t._v('\nこれがテストが失敗してしまう原因となるため、テストの期待する値を"goodbye world?"から"hello world"に変えてみましょう。')]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" unittest\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("challenge "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" hello\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloTestCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unittest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_success")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("このテストを実行してみると、先程まで失敗していたテストが成功しました。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("python -m unittest -v exercises.exercise0.test_challenge\ntest_success "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exercises.exercise0.test_challenge.HelloTestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". ok\n\n----------------------------------------------------------------------\nRan "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".000s\n\nOK\n")])])]),s("br"),t._v(" "),s("p",[t._v("このように、テストソースというものは、テストを実施したい関数に対して動作を確認するように作成・実行します。")]),t._v(" "),s("p",[t._v("本講義では、テストを実施したい関数に対し、テストソースで期待する返り値を設定し、関数の動作確認を行っていきます。")]),t._v(" "),s("br"),t._v(" "),s("p",[t._v("ちなみに、ローカルのソースファイルの変更は、コンテナ内にも自動で同期されます。"),s("br"),t._v("\n以降はローカルでファイルを変更し、コンテナ内でテストを実行してみましょう。")]),t._v(" "),s("br"),t._v(" "),s("h1",{attrs:{id:"テストを実行する"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#テストを実行する"}},[t._v("#")]),t._v(" テストを実行する")]),t._v(" "),s("h2",{attrs:{id:"同値クラス・境界値テスト"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同値クラス・境界値テスト"}},[t._v("#")]),t._v(" 同値クラス・境界値テスト")]),t._v(" "),s("p",[t._v("この項では「同値クラステスト」と「境界値テスト」という手法のテストを実施し、効率的なテストについて学びます。")]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"同値クラステストとは"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同値クラステストとは"}},[t._v("#")]),t._v(" 同値クラステストとは")]),t._v(" "),s("p",[t._v("同値クラステストとは「任意の関数"),s("code",[t._v("g(x)")]),t._v("の引数"),s("code",[t._v("x")]),t._v("に対し、有効である値、無効である値のグループ（有効同値クラス、無効同値クラス）を定義してテストを実施する」ものになります。")]),t._v(" "),s("p",[t._v("例えば、本書の冒頭で出てきた、関数"),s("code",[t._v("f(x)")]),t._v("では、"),s("code",[t._v("x")]),t._v("の値が "),s("em",[t._v("0")]),t._v(" から "),s("em",[t._v("100")]),t._v(" の間であれば有効同値クラス、そうでなければ無効同値クラス、と定義できます。"),s("br"),t._v("\n仮に「有効同値クラス内の値が入力された場合は正常終了、無効同値クラス内の値が入力された場合は異常終了する」と見た場合、終了の仕方は「正常終了か異常終了か」の2択と見ることができます。")]),t._v(" "),s("p",[t._v("すなわち、関数"),s("code",[t._v("f(x)")]),t._v("に対する同値クラステストとは、有効同値である "),s("em",[t._v("10")]),t._v(" , "),s("em",[t._v("50")]),t._v(" , "),s("em",[t._v("90")]),t._v(" など、いくつかの値のグループと、無効同値である "),s("em",[t._v("-500")]),t._v(" , "),s("em",[t._v("-10")]),t._v(" , "),s("em",[t._v("110")]),t._v(" , "),s("em",[t._v("500")]),t._v(" などの値のグループのテストを実施すればよいことになります。")]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"境界値テストとは"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#境界値テストとは"}},[t._v("#")]),t._v(" 境界値テストとは")]),t._v(" "),s("p",[t._v("同値クラステストでは「有効/無効と定義した値に対する処理が正しく動くか」を確認できました。")]),t._v(" "),s("p",[t._v("しかし、これでは「有効/無効の範囲は正しいか」が確認できていません。"),s("br"),t._v("\nこういった場合は境界値テストを実施し、有効値/無効値の境界が、正しく実行されるかのテストを行います。")]),t._v(" "),s("p",[t._v("本書冒頭の関数"),s("code",[t._v("f(x)")]),t._v("を例にすると、下限の境界値は "),s("em",[t._v("-1")]),t._v(" , "),s("em",[t._v("0")]),t._v(" 、上限の境界値は "),s("em",[t._v("100")]),t._v(" , "),s("em",[t._v("101")]),t._v(" となります。")]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"テスト実装例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#テスト実装例"}},[t._v("#")]),t._v(" テスト実装例")]),t._v(" "),s("p",[t._v("本書冒頭で定義した、関数"),s("code",[t._v("f(x)")]),t._v("がPythonで以下のように定義されているとします。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n")])])]),s("br"),t._v(" "),s("p",[t._v("上記の関数に対し、同値クラスのテストを定義すると、下記のように書くことができます。"),s("br"),t._v("\n下記のテストでは、関数"),s("code",[t._v("f(x)")]),t._v("に有効同値クラスの値を入力すると"),s("code",[t._v("True")]),t._v("、そうでない値を入力すると"),s("code",[t._v("False")]),t._v("が返却されることを確認しています。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" unittest\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExampleTestCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unittest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_equivalence_partitioning")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 有効同値のテスト")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 無効同値のテスト")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("br"),t._v(" "),s("p",[t._v("境界値テストを定義すると、下記のように書くことができます。"),s("br"),t._v("\n下記のテストでは、関数"),s("code",[t._v("f(x)")]),t._v("に下限の境界値 "),s("em",[t._v("-1")]),t._v(" , "),s("em",[t._v("0")]),t._v(" 、上限の境界値 "),s("em",[t._v("100")]),t._v(" , "),s("em",[t._v("101")]),t._v(" を入力し、適宜"),s("code",[t._v("True")]),t._v("か"),s("code",[t._v("False")]),t._v("が返却されることを確認しています。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" unittest\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExampleTestCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unittest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_equivalence_partitioning")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下限の境界値")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上限の境界値")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("br"),t._v(" "),s("h3",{attrs:{id:"問題にチャレンジしよう"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#問題にチャレンジしよう"}},[t._v("#")]),t._v(" 問題にチャレンジしよう")]),t._v(" "),s("p",[t._v("dockerコンテナ内の"),s("code",[t._v("/test-hands-on/exercises/exercise1/challenge.py")]),t._v("に、商品の申し込みを行う関数"),s("code",[t._v("apply(quantity)")]),t._v("が定義されています。")]),t._v(" "),s("p",[t._v("関数は以下の仕様になっています。")]),t._v(" "),s("ul",[s("li",[t._v("この関数は、int型の引数"),s("code",[t._v("quantity")]),t._v("を取ります。")]),t._v(" "),s("li",[t._v("関数"),s("code",[t._v("apply()")]),t._v("は、10以上、100以下の値が入力されると、申し込みが成功し、文字列"),s("code",[t._v('"accepted"')]),t._v("が返却されます。")]),t._v(" "),s("li",[t._v("申し込みに失敗した場合は、文字列"),s("code",[t._v('"not accepted"')]),t._v("が返却されます。")]),t._v(" "),s("li",[t._v("int型以外のデータが入力された場合、例外"),s("code",[t._v("TypeError()")]),t._v("が発生し、プログラムが異常終了します。")])]),t._v(" "),s("p",[t._v("dockerコンテナ内の"),s("code",[t._v("/test-hands-on/exercises/exercise1/test_challenge.py")]),t._v("に、作成途中のテストクラス"),s("code",[t._v("ApplyTestCase")]),t._v("が定義されているため、関数"),s("code",[t._v("apply(quantity)")]),t._v("に対するテストを作成してみましょう。")]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"apiと関数のモック"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#apiと関数のモック"}},[t._v("#")]),t._v(" APIと関数のモック")]),t._v(" "),s("p",[t._v("この項では、Pythonで実行できるAPI（FastAPI）のフレームワークを使用し、APIに対するテストや、関数のモックに触れてみましょう。")]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"モックとは"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#モックとは"}},[t._v("#")]),t._v(" モックとは")]),t._v(" "),s("p",[t._v("「モックアップ」の略称であり、工業製品などの試作や、店頭展示などのためにつくられる実物大模型のことを指します。"),s("br"),t._v("\n「"),s("a",{attrs:{href:"https://dictionary.goo.ne.jp/word/%e3%83%a2%e3%83%83%e3%82%af%e3%82%a2%e3%83%83%e3%83%97/",target:"_blank",rel:"noopener noreferrer"}},[t._v("goo辞書 モックアップ（mock-up）"),s("OutboundLink")],1),t._v("」より")]),t._v(" "),s("p",[t._v("テストにおけるモックとは、主にクラスや関数の動作をシミュレートするためのオブジェクトになります。")]),t._v(" "),s("br"),t._v(" "),s("p",[t._v("例えば、以下のような仕様の関数"),s("code",[t._v("rock_paper_scissors(shoot)")]),t._v("があるとします。")]),t._v(" "),s("ul",[s("li",[t._v("関数"),s("code",[t._v("rock_paper_scissors(shoot)")]),t._v("は、じゃんけんを行う関数で、引数"),s("code",[t._v("shoot")]),t._v('は文字列"rock", "paper", "scissors"の、いずれかを取ります。')]),t._v(" "),s("li",[t._v("関数"),s("code",[t._v("rock_paper_scissors()")]),t._v("は、内部で引数に対してじゃんけんの手を出す関数"),s("code",[t._v("my_shoot()")]),t._v("が実行されます。")]),t._v(" "),s("li",[t._v("関数"),s("code",[t._v("my_shoot()")]),t._v("は、それぞれ "),s("em",[t._v("1/3")]),t._v(' の確率で"rock", "paper", "scissors"のいずれかを取得します。')]),t._v(" "),s("li",[t._v("関数"),s("code",[t._v("rock_paper_scissors()")]),t._v("は、入力された引数"),s("code",[t._v("shoot")]),t._v("が、関数"),s("code",[t._v("my_shoot()")]),t._v("の返り値に勝利できる場合 "),s("em",[t._v("1")]),t._v(" 、引き分けであれば "),s("em",[t._v("0")]),t._v(" 、敗北であれば "),s("em",[t._v("-1")]),t._v(" を返します。")])]),t._v(" "),s("p",[t._v("上記の関数"),s("code",[t._v("rock_paper_scissors()")]),t._v("をテストする場合、内部の関数の返り値が乱数で決定されてしまうため、通常であればテストが実行できません。"),s("br"),t._v("\n（例えば、1回目の"),s("code",[t._v("my_shoot()")]),t._v('を実行した時に"rock"が返却されたとしても、2回目も"rock"が返却されるとは限らないですよね）')]),t._v(" "),s("p",[t._v("こういった場合、関数のモックを使用して、テスト対象の関数内で使用されているクラスや関数をモックし、返り値を固定してシミュレーションを行う必要があります。")]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"テスト実装例-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#テスト実装例-2"}},[t._v("#")]),t._v(" テスト実装例")]),t._v(" "),s("p",[t._v("関数"),s("code",[t._v("rock_paper_scissors(shoot)")]),t._v("が、Pythonで以下のように定義されているとします。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rock_paper_scissors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shoot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 1/3で"rock", "paper", "scissors"が格納される')]),t._v("\n  my_shoot_result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" my_shoot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# あいこ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" shoot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" my_shoot_result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 勝利")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" shoot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rock"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" my_shoot_result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scissors"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" shoot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"paper"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" my_shoot_result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rock"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" shoot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scissors"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" my_shoot_result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"paper"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 敗北")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("br"),t._v(" "),s("p",[t._v("上記の関数に対し、モックを使用したテストを定義すると、下記のように書くことができます。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" unittest\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" unittest "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" mock\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 関数rock_paper_scissors(), my_shoot()は、exampleパッケージに含まれているとする")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" example\n\nrock_paper_scissors "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rock_paper_scissors\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExampleTestCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unittest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_rock_paper_scissors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# あいこのテスト")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" mock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("patch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my_shoot'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" return_value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rock"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rock_paper_scissors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rock"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 勝利のテスト")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" mock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("patch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my_shoot'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" return_value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scissors"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rock_paper_scissors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rock"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 敗北のテスト")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" mock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("patch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my_shoot'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" return_value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"paper"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rock_paper_scissors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rock"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("br"),t._v(" "),s("h3",{attrs:{id:"fastapiについて"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fastapiについて"}},[t._v("#")]),t._v(" FastAPIについて")]),t._v(" "),s("p",[t._v("IIJ Bootcamp「FastAPI でwebアプリを作る」にて紹介されているため、詳細の説明は省きます。")]),t._v(" "),s("p",[t._v("下記「テスト実装例」にサンプルを記載するように、簡単にAPIを実装できるフレームワークになっています。")]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"テスト実装例-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#テスト実装例-3"}},[t._v("#")]),t._v(" テスト実装例")]),t._v(" "),s("p",[t._v("FastAPIは、下記のようにAPIを実装できます。"),s("br"),t._v("\n下記は、ブラウザで"),s("code",[t._v("http://localhost:8000/hello")]),t._v("にアクセスすると、データ"),s("code",[t._v('{"response": "hello"}')]),t._v("を返却します。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" fastapi "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" FastAPI\n\napp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" FastAPI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"response"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("br"),t._v(" "),s("p",[t._v("上記のAPIに対し、HTTPステータスやレスポンスを検証するテストは、下記のように書くことができます。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" unittest\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExampleTestCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unittest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_api")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# パス"/hello"に接続する')]),t._v("\n        res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HTTPステータスと、レスポンスの取得")]),t._v("\n        status "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status_code\n        data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HTTPステータスと、レスポンスの検証")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"response"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("br"),t._v(" "),s("h3",{attrs:{id:"問題にチャレンジしよう-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#問題にチャレンジしよう-2"}},[t._v("#")]),t._v(" 問題にチャレンジしよう")]),t._v(" "),s("p",[t._v("dockerコンテナ内の"),s("code",[t._v("/test-hands-on/exercises/exercise2/challenge.py")]),t._v("に、FastAPIと、いくつかのエンドポイントが定義されています。")]),t._v(" "),s("p",[t._v("上記のAPIは、コンテナから下記のコマンドで実行することができます。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ python3 -m uvicorn exercises.exercise2.challenge:app --reload --host "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.0.0"')]),t._v("\n")])])]),s("br"),t._v(" "),s("p",[t._v("API実行後は、ブラウザに下記のURLを入力すると、APIにアクセスできます。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("http://localhost:8000/\n")])])]),s("br"),t._v(" "),s("p",[t._v("また、APIは下記のエンドポイントがあります。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("パス")]),t._v(" "),s("th",[t._v("詳細")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("/")]),t._v(" "),s("td",[s("code",[t._v('{"message": "hello world"}')]),t._v("が返却されます。")])]),t._v(" "),s("tr",[s("td",[t._v("/echo/{data}")]),t._v(" "),s("td",[s("code",[t._v('{"message": "got the message: {data}"}')]),t._v("が返却されます。"),s("br"),t._v("※"),s("code",[t._v("{data}")]),t._v("は、任意の値が代入されます。")])]),t._v(" "),s("tr",[s("td",[t._v("/gacha")]),t._v(" "),s("td",[s("code",[t._v('{"message": "{result}"')]),t._v("が返却されます。"),s("br"),t._v("※"),s("code",[t._v("{result}")]),t._v("は、 "),s("em",[t._v("1/100")]),t._v(' で文字列"you win"、それ以外で文字列"you lose"が代入されます。')])])])]),t._v(" "),s("p",[t._v("dockerコンテナ内の"),s("code",[t._v("/test-hands-on/exercises/exercise2/test_challenge.py")]),t._v("に、作成途中のテストクラス"),s("code",[t._v("ApiTestCase")]),t._v("が定義されているため、上記の仕様のAPIに対するテストを作成してみましょう。")]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"tddをやってみる"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tddをやってみる"}},[t._v("#")]),t._v(" TDDをやってみる")]),t._v(" "),s("p",[t._v("TDDとは、「テスト駆動開発( "),s("em",[t._v("Test-Driven")]),t._v(" )」のことを指し「テストファースト（テスト優先）」を掲げて開発を行う、 "),s("strong",[t._v("開発手法")]),t._v(" のことになります。")]),t._v(" "),s("p",[t._v("テスト手法じゃないよ !!!!")]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"tddのやり方"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tddのやり方"}},[t._v("#")]),t._v(" TDDのやり方")]),t._v(" "),s("p",[t._v("TDDは、任意の開発を行う設計があるうえで、下記のサイクルで開発を行っていきます。")]),t._v(" "),s("ol",[s("li",[t._v("Red\n"),s("ul",[s("li",[t._v("動作をしないテストを書く。")])])]),t._v(" "),s("li",[t._v("Green\n"),s("ul",[s("li",[t._v("迅速に、テストを実行できるコードを書いてテストを通すようにする。"),s("br"),t._v("\n※コードが汚くても良い。")])])]),t._v(" "),s("li",[t._v("Refactoring\n"),s("ul",[s("li",[t._v("リファクタリングを行い、コード内から重複を削除する。")])])])]),t._v(" "),s("p",[t._v("上記 "),s("em",[t._v("1~3")]),t._v(" のサイクルを実行し、動きつつコードとリファクタリングによって最適化されたコードを、着実に作っていく手法になります。")]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"テスト実装例-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#テスト実装例-4"}},[t._v("#")]),t._v(" テスト実装例")]),t._v(" "),s("p",[t._v("この項で実際に、TDDのサイクルを見てみましょう。")]),t._v(" "),s("p",[t._v("例えば、以下の仕様のソースを作りたいとします。")]),t._v(" "),s("ul",[s("li",[t._v("クラス内の"),s("code",[t._v("do()")]),t._v('関数の、実行回数が3の倍数なら"Fizz"、5の倍数なら"Buzz"を返す、クラス'),s("code",[t._v("FizzBuzz")]),t._v("を実装します。")]),t._v(" "),s("li",[t._v("このクラスは"),s("code",[t._v("do()")]),t._v("の実行回数を、内部でカウントします。")]),t._v(" "),s("li",[t._v("3でも5の倍数でもないカウントに対しては、そのカウントを返します。")])]),t._v(" "),s("p",[t._v("上記のコードをTDDで作成していきましょう。")]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"サイクル1-red"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#サイクル1-red"}},[t._v("#")]),t._v(" サイクル1 Red")]),t._v(" "),s("p",[t._v("まずは、クラス"),s("code",[t._v("FizzBuzz")]),t._v("の関数を作成します。"),s("br"),t._v("\n下記のコードは、"),s("code",[t._v("example.py")]),t._v("のようなパッケージにあると考えてください。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FizzBuzz")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n")])])]),s("br"),t._v(" "),s("p",[t._v("次に、動作をしないテストを書きましょう。"),s("br"),t._v(" "),s("code",[t._v("do()")]),t._v("が最初に実行する時は、下記の仕様が適用されます。")]),t._v(" "),s("blockquote",[s("p",[t._v("3でも5の倍数でもないカウントに対しては、そのカウントを返します。")])]),t._v(" "),s("br"),t._v(" "),s("p",[t._v("とりあえず1回目の実行では「1」が返ってくるはずなので、テストでは「1」を期待してみます。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" unittest\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fizzbuzz "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" FizzBuzz\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExampleTestCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unittest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_success")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        fb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" FizzBuzz"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("br"),t._v(" "),s("p",[t._v("これを実行すると、当然のようにコケますね。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ python -m unittest -v example.test_fizzbuzz\ntest_success "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example.test_fizzbuzz.ExampleTestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". FAIL\n")])])]),s("br"),t._v(" "),s("h3",{attrs:{id:"サイクル1-green"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#サイクル1-green"}},[t._v("#")]),t._v(" サイクル1 Green")]),t._v(" "),s("p",[t._v("次は「とりあえず動くコードを書く」ことをします。"),s("br"),t._v("\nテストでは1が返却されることを期待しているので、1を返しましょう。"),s("br"),t._v("\nTDDって簡単ですね。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FizzBuzz")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("br"),t._v(" "),s("p",[t._v("動いたよ！！！！やったね！！！！！！！！！")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ python -m unittest -v example.test_fizzbuzz\ntest_success "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example.test_fizzbuzz.ExampleTestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". ok\n")])])]),s("br"),t._v(" "),s("h3",{attrs:{id:"サイクル1-refactoring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#サイクル1-refactoring"}},[t._v("#")]),t._v(" サイクル1 Refactoring")]),t._v(" "),s("p",[t._v("現在の"),s("code",[t._v("FizzBuzz")]),t._v("は、この世界に存在するどんなものよりも洗練されているため、リファクタリングは必要ないですね。"),s("br"),t._v("\n素晴らしい。")]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"サイクル2-red"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#サイクル2-red"}},[t._v("#")]),t._v(" サイクル2 Red")]),t._v(" "),s("p",[t._v("2サイクル目に来ました。"),s("br"),t._v("\nRedでは、あえてテストを失敗させなければならないため、泣く泣く完成されたテストコードに手を加えましょう。")]),t._v(" "),s("p",[t._v("サイクル1 Redでも確認した通り、どうやら"),s("code",[t._v("do()")]),t._v("を実行するごとに実行回数を返してくれるそうです。"),s("br"),t._v("\n実行回数毎に、期待する値を増加させてみましょう。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" unittest\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fizzbuzz "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" FizzBuzz\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExampleTestCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unittest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_success")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        fb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" FizzBuzz"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("br"),t._v(" "),s("p",[s("code",[t._v("FizzBuzz")]),t._v("は既に完成されているため、テストをいくら加えようが失敗するはずがないのですが、試してみましょう。"),s("br"),t._v("\nまあ、やる意味はないと思うのですが（笑）")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ python -m unittest -v example.test_fizzbuzz\ntest_success "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example.test_fizzbuzz.ExampleTestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". FAIL\n")])])]),s("br"),t._v(" "),s("h3",{attrs:{id:"サイクル2-green"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#サイクル2-green"}},[t._v("#")]),t._v(" サイクル2 Green")]),t._v(" "),s("p",[t._v("なんということでしょうか。"),s("br"),t._v("\n完成されていたと思われた"),s("code",[t._v("do()")]),t._v("は、何回実行しても「1」しか返してくれないではないですか。")]),t._v(" "),s("p",[t._v("誰ですか、こんな実装にしたのは（怒）")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FizzBuzz")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global")]),t._v(" count\n        count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" count\n")])])]),s("br"),t._v(" "),s("p",[t._v("だいぶ雑なコードですが、たぶん動くと思うからテストしましょう。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ python -m unittest -v example.test_fizzbuzz\ntest_success "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example.test_fizzbuzz.ExampleTestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". ok\n")])])]),s("br"),t._v(" "),s("h3",{attrs:{id:"サイクル2-refactoring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#サイクル2-refactoring"}},[t._v("#")]),t._v(" サイクル2 Refactoring")]),t._v(" "),s("p",[t._v("現在の"),s("code",[t._v("FizzBuzz")]),t._v("はグローバル変数が使用されているなど、あまり美しくありません。"),s("br"),t._v("\nクラスで値を持たせて、インスタンス毎に値を共有させないようにしましょう。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FizzBuzz")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count\n")])])]),s("br"),t._v(" "),s("p",[t._v("コードを変更しましたが、テストの結果が成功のままであることを確認します。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ python -m unittest -v example.test_fizzbuzz\ntest_success "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example.test_fizzbuzz.ExampleTestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". ok\n")])])]),s("br"),t._v(" "),s("h3",{attrs:{id:"サイクル3-red"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#サイクル3-red"}},[t._v("#")]),t._v(" サイクル3 Red")]),t._v(" "),s("p",[t._v("さて、ここまでで以下の仕様を実装することができました。")]),t._v(" "),s("ul",[s("li",[t._v("内部でカウントを保持する。")]),t._v(" "),s("li",[t._v("3でも5でもないカウントは、その値を返す。")])]),t._v(" "),s("br"),t._v(" "),s("p",[t._v('次は「3の倍数なら"Fizz"を返す」を実装してみましょう。')]),t._v(" "),s("p",[t._v("失敗するテストを書きます。\nテスト全体を書くと文字量が多くなりますので、以降は差分で表記します。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('-        self.assertEqual(fb.do(), 3)\n+        self.assertEqual(fb.do(), "Fizz")\n\n-        self.assertEqual(fb.do(), 6)\n+        self.assertEqual(fb.do(), "Fizz")\n\n-        self.assertEqual(fb.do(), 9)\n+        self.assertEqual(fb.do(), "Fizz")\n\n-        self.assertEqual(fb.do(), 12)\n+        self.assertEqual(fb.do(), "Fizz")\n\n-        self.assertEqual(fb.do(), 15)\n+        self.assertEqual(fb.do(), "Fizz")\n')])])]),s("br"),t._v(" "),s("p",[t._v("テストは失敗しますね。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ python -m unittest -v example.test_fizzbuzz\ntest_success "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example.test_fizzbuzz.ExampleTestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". FAIL\n")])])]),s("br"),t._v(" "),s("h3",{attrs:{id:"サイクル3-green"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#サイクル3-green"}},[t._v("#")]),t._v(" サイクル3 Green")]),t._v(" "),s("p",[t._v('さて、"Fizz"を返せるように'),s("code",[t._v("FizzBuzz")]),t._v("を修正しましょう。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FizzBuzz")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Fizz"')]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count\n")])])]),s("br"),t._v(" "),s("p",[t._v("テストはオールグリーンです。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ python -m unittest -v example.test_fizzbuzz\ntest_success "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example.test_fizzbuzz.ExampleTestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". ok\n")])])]),s("br"),t._v(" "),s("h3",{attrs:{id:"サイクル3-refactoring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#サイクル3-refactoring"}},[t._v("#")]),t._v(" サイクル3 Refactoring")]),t._v(" "),s("p",[t._v("特にリファクタリング箇所がないので省きます。")]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"サイクル4-red"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#サイクル4-red"}},[t._v("#")]),t._v(" サイクル4 Red")]),t._v(" "),s("p",[t._v("最後の仕様になります。"),s("br"),t._v('\n最後は「5の倍数なら"Buzz"を返す」を実装します。')]),t._v(" "),s("p",[t._v('ただし、3かつ5の倍数であれば"FizzBuzz"が返ることに注意してください。')]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('-        self.assertEqual(fb.do(), 5)\n+        self.assertEqual(fb.do(), "Buzz")\n\n-        self.assertEqual(fb.do(), 10)\n+        self.assertEqual(fb.do(), "Buzz")\n\n-        self.assertEqual(fb.do(), 15)\n+        self.assertEqual(fb.do(), "FizzBuzz")\n')])])]),s("br"),t._v(" "),s("p",[t._v("「手がかかる子ほど可愛い」というのは、このことを言うのでしょうか。"),s("br"),t._v("\nだんだんコンソールに出力される「FAIL」が愛おしく思えてきました。")]),t._v(" "),s("p",[t._v("きっと「失敗の後は必ず成功する」ということが約束されているからでしょう。")]),t._v(" "),s("p",[t._v("みなさんも、そう思いませんか？")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ python -m unittest -v example.test_fizzbuzz\ntest_success "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example.test_fizzbuzz.ExampleTestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". FAIL\n")])])]),s("br"),t._v(" "),s("h3",{attrs:{id:"サイクル4-green"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#サイクル4-green"}},[t._v("#")]),t._v(" サイクル4 Green")]),t._v(" "),s("p",[t._v('"Buzz"および"FizzBuzz"を返せるようにしましょう。')]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FizzBuzz")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FizzBuzz"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Fizz"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Buzz"')]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count\n")])])]),s("br"),t._v(" "),s("p",[t._v("テストも通ります。"),s("br"),t._v("\nやったか！？（まだ終わりじゃないです。）")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ python -m unittest -v example.test_fizzbuzz\ntest_success "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example.test_fizzbuzz.ExampleTestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". ok\n")])])]),s("br"),t._v(" "),s("h3",{attrs:{id:"サイクル4-refactoring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#サイクル4-refactoring"}},[t._v("#")]),t._v(" サイクル4 Refactoring")]),t._v(" "),s("p",[t._v("最後のリファクタリングになります。"),s("br"),t._v("\nこれで全てを終わらせて、あなたは次のステージへ進むことになるでしょう。")]),t._v(" "),s("p",[t._v("先程書いた"),s("code",[t._v("FizzBuzz")]),t._v("では、まだ手続きを共通化し、最適にできる部分があります。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#####################################")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# このコードは一例です。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# みんなが読みやすいコードを書こうね！")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#####################################")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FizzBuzz")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_divided")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" div"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" div"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("do")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Fizz"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Buzz"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FizzBuzz"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_divided"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \\\n            "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_divided"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("br"),t._v(" "),s("p",[t._v("多分これが一番美しいと思います。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ python -m unittest -v example.test_fizzbuzz\ntest_success "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example.test_fizzbuzz.ExampleTestCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". ok\n")])])]),s("br"),t._v(" "),s("h3",{attrs:{id:"問題にチャレンジしよう-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#問題にチャレンジしよう-3"}},[t._v("#")]),t._v(" 問題にチャレンジしよう")]),t._v(" "),s("p",[t._v("dockerコンテナ内の"),s("code",[t._v("/test-hands-on/exercises/exercise3/challenge.py")]),t._v("には、FastAPIで書かれた作りかけのAPIがあります。")]),t._v(" "),s("p",[t._v("上記のAPIは、コンテナから下記のコマンドで実行することができます。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ python3 -m uvicorn exercises.exercise3.challenge:app --reload --host "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.0.0"')]),t._v("\n")])])]),s("br"),t._v(" "),s("p",[t._v("API実行後は、ブラウザに下記のURLを入力すると、APIにアクセスできます。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("http://localhost:8000/\n")])])]),s("br"),t._v(" "),s("p",[t._v("みなさんには、TDDを使って上記のAPIを完成させてもらいます。"),s("br"),t._v("\n作ってもらいたいAPIの仕様は、下記のものになります。")]),t._v(" "),s("ul",[s("li",[t._v("このAPIは、"),s("code",[t._v("/, /add, /sub, /mul, /div")]),t._v("の5つのエンドポイントがあります。")]),t._v(" "),s("li",[t._v("このAPIはサーバ内部でint型の値を保持し、現在設定されている値を"),s("code",[t._v("/")]),t._v("にアクセスすることで、確認することができます。\nまた、値は0始まりになります。")]),t._v(" "),s("li",[s("code",[t._v("/add, /sub, /mul, /div")]),t._v("にパスパラメータを与えると、保持されている値に対し、四則演算を行います（後述）。")]),t._v(" "),s("li",[t._v("本APIでは、全てint型で計算を行います。")])]),t._v(" "),s("br"),t._v(" "),s("p",[t._v("以下、APIのパスについて")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("パス")]),t._v(" "),s("th",[t._v("詳細")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("/")]),t._v(" "),s("td",[s("code",[t._v('{"current_number": {数値}}')]),t._v("が返却されます。"),s("br"),t._v("{数値}には、サーバで保持されている値が入ります。")])]),t._v(" "),s("tr",[s("td",[t._v("/add/{data}")]),t._v(" "),s("td",[s("code",[t._v('{"current_number": {数値}}')]),t._v("が返却されます。"),s("br"),t._v("{data}に渡された値をサーバで保持している値に加算します。")])]),t._v(" "),s("tr",[s("td",[t._v("/sub/{data}")]),t._v(" "),s("td",[s("code",[t._v('{"current_number": {数値}}')]),t._v("が返却されます。"),s("br"),t._v("{data}に渡された値をサーバで保持している値から減算します。")])]),t._v(" "),s("tr",[s("td",[t._v("/mul/{data}")]),t._v(" "),s("td",[s("code",[t._v('{"current_number": {数値}}')]),t._v("が返却されます。"),s("br"),t._v("{data}に渡された値をサーバで保持している値に乗算します。")])]),t._v(" "),s("tr",[s("td",[t._v("/div/{data}")]),t._v(" "),s("td",[s("code",[t._v('{"current_number": {数値}}')]),t._v("が返却されます。"),s("br"),t._v("{data}に渡された値をサーバで保持している値から除算します。")])])])]),t._v(" "),s("br"),t._v(" "),s("p",[t._v("サーバでの値の保持・取得関数は、ソース内に定義されています。"),s("br"),t._v("\n以下に、使い方の例を記載します。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# サーバ内に保持されている値を記録します。")]),t._v("\nset_current_number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# サーバ内に保持されている値を取得します")]),t._v("\ngot_data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_current_number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# got_data = 1")]),t._v("\n\nset_current_number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngot_data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_current_number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# got_data = 579")]),t._v("\n")])])]),s("p",[t._v("dockerコンテナ内の"),s("code",[t._v("/test-hands-on/exercises/exercise3/test_challenge.py")]),t._v("には、本APIが完成すると通るようになる、テスト"),s("code",[t._v("test_success()")]),t._v("が定義されています。")]),t._v(" "),s("p",[t._v("上記のテストがOKになるよう、各種APIをTDDを使って作成してみましょう。")]),t._v(" "),s("br"),t._v(" "),s("h1",{attrs:{id:"おわりに"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#おわりに"}},[t._v("#")]),t._v(" おわりに")]),t._v(" "),s("p",[t._v("一般的にソフトウェアテストというと、専門のテスト部隊があって「Excelにスクショをペタペタ貼るだけでしょ？」というようなイメージを持ち、敬遠される方も少なくはないと思います。")]),t._v(" "),s("p",[t._v("開発者がテストについて知識を持ち、単体テストで可能な限りの不具合をなくしておくと、後の工程で不具合が少なく済ますことができたり、メリットがあります。"),s("br"),t._v("\nまた、後の工程で発生した不具合の内容を聞いた・見ただけで、どのモジュール同士で問題が起こっているのか目星がつくなど、効率的なトラブルシュートやソフトウェアの理解にも繋がります。")]),t._v(" "),s("p",[t._v("冒頭でも述べましたが、ソフトウェアにも品質というものがあり、この品質次第で会社の売上に影響が出たり、企業のセキュリティや人命に影響を及ぼしてしまう懸念もあります。")]),t._v(" "),s("p",[t._v("そのため。開発を行う際には是非テストにも注力をしていただき、ユーザーの満足できるソフトウェアを作れるよう、目指してみてください。")]),t._v(" "),s("p",[t._v("良いエンジニアライフを！👍")]),t._v(" "),s("credit-footer")],1)}),[],!1,null,null,null);s.default=e.exports}}]);