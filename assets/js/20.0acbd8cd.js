(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{325:function(t,e,a){t.exports=a.p+"assets/img/replica-set-primary-with-two-secondaries.bakedsvg.71ff1fec.svg"},326:function(t,e,a){t.exports=a.p+"assets/img/replica-set-trigger-election.bakedsvg.a65dbacf.svg"},433:function(t,e,a){"use strict";a.r(e);var n=a(10),o=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("header-table"),t._v(" "),e("h1",{attrs:{id:"page-frontmatter-title"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#page-frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$page.frontmatter.title))]),t._v(" "),e("h2",{attrs:{id:"今日のサンプル環境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#今日のサンプル環境"}},[t._v("#")]),t._v(" 今日のサンプル環境")]),t._v(" "),e("p",[t._v("以下のレポジトリを手元にクローンして、"),e("code",[t._v("docker compose up -d")]),t._v("を実行してください。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/iij/bootcamp-mongodb-sample",target:"_blank",rel:"noopener noreferrer"}},[t._v("iij/bootcamp-mongodb-sample"),e("OutboundLink")],1)]),t._v(" "),e("div",{staticClass:"language-terminal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ git clone git@github.com:iij/bootcamp-mongodb-sample.git\n$ cd bootcamp-mongodb-sample/\n$ docker compose up -d\n[+] Running 3/3\n ⠿ Container bootcamp-mongodb-sample-mongo-secondary-1  Started                                                                                 7.3s\n ⠿ Container bootcamp-mongodb-sample-mongo-primary-1    Started                                                                                 7.1s\n ⠿ Container bootcamp-mongodb-sample-mongo-arbiter-1    Started                                                                                 8.0s\n$ docker compose ps\nNAME                                        COMMAND                  SERVICE             STATUS              PORTS\nbootcamp-mongodb-sample-mongo-arbiter-1     "docker-entrypoint.s…"   mongo-arbiter       running             0.0.0.0:27019->27019/tcp, :::27019->27019/tcp\nbootcamp-mongodb-sample-mongo-primary-1     "docker-entrypoint.s…"   mongo-primary       running             0.0.0.0:27017->27017/tcp, :::27017->27017/tcp\nbootcamp-mongodb-sample-mongo-secondary-1   "docker-entrypoint.s…"   mongo-secondary     running             0.0.0.0:27018->27018/tcp, :::27018->27018/tcp                                                  ::27018->27018/tcp\n')])])]),e("h2",{attrs:{id:"mongodbの紹介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mongodbの紹介"}},[t._v("#")]),t._v(" MongoDBの紹介")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.mongodb.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MongoDB"),e("OutboundLink")],1),t._v("は2009年に初版がリリースされた、MongoDB社が開発しているドキュメント指向のデータベース。\nMySQLなどのRDBが「行と列」からなるテーブル形式でデータを管理するのに対して、ドキュメント指向であるMongoDBには以下のjsonデータのようなオブジェクトをそのまま保存・検索ができるデータベースです。")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"username"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bob"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"address"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"street"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123 Main Street"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"city"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Springfield"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"state"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NY"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("いわゆる「NoSQL」としてRDBMSに比べて大量のデータを柔軟に保存し、複雑な検索クエリで比較的高速に検索・集計することができます。\nさらにレプリケーションやインデックス、ドキュメント単位のロックなどRDBMSと同じような機能を持つため、スキーマレス（テーブル定義を事前に決めなくてもいい）でありながらRDBMSのような使い方ができます。")]),t._v(" "),e("p",[t._v("他の特徴として、「レプリカセット」と呼ばれる仕組みで3台（奇数台）1セットの冗長構成を簡単に作れる他、「シャーディング」による負荷分散構成も簡単に構築することができます。")]),t._v(" "),e("h3",{attrs:{id:"個人的な雑感"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#個人的な雑感"}},[t._v("#")]),t._v(" 個人的な雑感")]),t._v(" "),e("p",[t._v("MongoDBはスキーマレスでありながらRDBMSのような使い方もできることから、サービス立ち上げ時に開発スピードが求められる段階において、データスキーマを含めて試行錯誤を高速に繰り返すような使われ方が話題になりました。\n現在では上記のような開発手法で利用されることは少なく、主に以下のような場面で利用されます。")]),t._v(" "),e("ul",[e("li",[t._v("IoTのセンサーデータなど、insert manyなデータの格納・検索\n"),e("ul",[e("li",[t._v("データ間のリレーションや更新の一貫性があまり求められず、更新よりもデータの追加が頻発するケース")]),t._v(" "),e("li",[t._v("書き込みが多く、write操作の負荷分散が必要になるケース")])])]),t._v(" "),e("li",[t._v("データのaggregation(集計)、地理情報などによる特殊な検索用途\n"),e("ul",[e("li",[t._v("スキーマレスを活かし、データを雑に投入して後からゴリゴリクエリを書いて集計するケース")]),t._v(" "),e("li",[t._v("地理情報(geo location)検索など特殊な検索が必要になるケース")])])])]),t._v(" "),e("p",[t._v("もちろん上記のようなケースはRDBでも可能ですし、個々の機能について言えばもっと得意なDB製品は存在します。\n一方でMongoDBは幅広いケースについて80点くらいを取れるような製品と言えます。")]),t._v(" "),e("h2",{attrs:{id:"早速使ってみよう"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#早速使ってみよう"}},[t._v("#")]),t._v(" 早速使ってみよう")]),t._v(" "),e("p",[t._v("何はともあれ使ってみましょう。"),e("code",[t._v("docker compose up -d")]),t._v("に成功していれば、以下のコマンドでMongoDBのコンソールが使えます。")]),t._v(" "),e("div",{staticClass:"language-terminal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ docker compose exec mongo-arbiter mongo --port 27017 --host mongo-primary\n\nMongoDB shell version v5.0.1\nconnecting to: mongodb://mongo-primary:27017/?compressors=disabled&gssapiServiceName=mongodb\nImplicit session: session { "id" : UUID("c90c0469-9eb0-4583-bb9d-5af4b7a3f907") }\nMongoDB server version: 5.0.1\n\n~~略~~\n\n> \n> rs.initiate()\n{\n\t"info2" : "no configuration specified. Using a default configuration for the set",\n\t"me" : "edd2f8708eef:27017",\n\t"ok" : 1\n}\nmongo-set:SECONDARY>\nmongo-set:PRIMARY>\n')])])]),e("p",[t._v("まずはおまじないとして"),e("code",[t._v("rs.initiate()")]),t._v("を実行しておいてください。あとで紹介します。")]),t._v(" "),e("p",[t._v("とりあえず適当なデータを作成してみましょう。")]),t._v(" "),e("div",{staticClass:"language-terminal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('mongo-set:PRIMARY> use bootcamp-db\nswitched to db bootcamp-db\nmongo-set:PRIMARY> db.people.insert({name: "tanaka-san", age: 22})\nWriteResult({ "nInserted" : 1 })\nmongo-set:PRIMARY> db.people.insert({name: "sato-san", age: 25})\nWriteResult({ "nInserted" : 1 })\n\nmongo-set:PRIMARY> db.people.find()\n{ "_id" : ObjectId("61065f590ea234e44f402acf"), "name" : "tanaka-san", "age" : 22 }\n{ "_id" : ObjectId("61065f650ea234e44f402ad0"), "name" : "sato-san", "age" : 25 }\nmongo-set:PRIMARY>\n')])])]),e("p",[t._v("RDBMSにおける「テーブル」は、MongoDBでは「collection」と呼ばれます。ここでは"),e("code",[t._v("people")]),t._v("がcollectionです。")]),t._v(" "),e("div",{staticClass:"language-terminal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("mongo-set:PRIMARY> show collections;\npeople\n")])])]),e("p",[t._v("MySQLなどのように事前に"),e("code",[t._v("CREATE TABLE...")]),t._v("などでテーブルを作成しなくても、勝手にcollectionが作成されています。\nMongoDBはスキーマレスなので、形式を問わずデータを保存できます。")]),t._v(" "),e("div",{staticClass:"language-terminal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('mongo-set:PRIMARY> db.people.insert({name: "watanabe-san", age: 23, address: "tokyo"})\nWriteResult({ "nInserted" : 1 })\nmongo-set:PRIMARY> db.people.insert({name: "fujimoto-san", age: 23, address: {post: "123-4567", city: "tokyo"}})\nWriteResult({ "nInserted" : 1 })\nmongo-set:PRIMARY> db.people.insert({name: "kawai-san", age: 30, address: {post: "123-9876", city: "tokyo"}})\nWriteResult({ "nInserted" : 1 })\n')])])]),e("p",[e("code",[t._v("db.people.find()")]),t._v(" してみてください。"),e("code",[t._v("people")]),t._v(" collectionの中にいろんな形式でデータが保存されています。")]),t._v(" "),e("h2",{attrs:{id:"検索と集計-aggregation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#検索と集計-aggregation"}},[t._v("#")]),t._v(" 検索と集計(Aggregation)")]),t._v(" "),e("p",[t._v("単純な検索であれば"),e("code",[t._v("find()")]),t._v("で可能です。")]),t._v(" "),e("div",{staticClass:"language-terminal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('# 名前が`sato-san`なデータを検索\ndb.people.find({name: "sato-san"})\n\n# ageが23以上なデータを検索\ndb.people.find({age: {$gte: 23}})\n')])])]),e("p",[e("code",[t._v("$gte")]),t._v("は"),e("code",[t._v("greater than or equal")]),t._v("の略で「以上」のデータを検索します。例えばageが23「未満」なデータを検索する場合は"),e("code",[t._v("$lt")]),t._v("("),e("code",[t._v("lower than")]),t._v(")です。\n詳しくはこちら => "),e("a",{attrs:{href:"https://docs.mongodb.com/manual/reference/operator/query-comparison/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Comparison Query Operators"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("ネストされたデータも検索できます。")]),t._v(" "),e("div",{staticClass:"language-terminal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('> db.people.find({"address.city": "tokyo"})\n')])])]),e("p",[t._v("さらに詳しい検索や集計をする場合、強力な "),e("a",{attrs:{href:"https://docs.mongodb.com/manual/core/aggregation-pipeline/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Aggregation"),e("OutboundLink")],1),t._v(" 機能が使えます。")]),t._v(" "),e("p",[t._v("まずは何も集計せずに検索してみましょう。")]),t._v(" "),e("div",{staticClass:"language-terminal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('mongo-set:PRIMARY> db.people.aggregate([   { $match: {"address.city": "tokyo"} } ])\n{ "_id" : ObjectId("62e5e5265beeb8a010811279"), "name" : "fujimoto-san", "age" : 23, "address" : { "post" : "123-4567", "city" : "tokyo" } }\n{ "_id" : ObjectId("62e5e52e5beeb8a01081127a"), "name" : "kawai-san", "age" : 30, "address" : { "post" : "123-9876", "city" : "tokyo" } }\nm\n')])])]),e("p",[t._v("例えばここからMySQLの"),e("code",[t._v("group by")]),t._v("と同じことをするには以下のようにします。")]),t._v(" "),e("div",{staticClass:"language-terminal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('db.people.aggregate([\n  { $match: {"address.city": "tokyo"} },\n  { $group: {_id: "$address.city", age_sum: {$sum: "$age"}} }\n])\n')])])]),e("p",[t._v("ここでは"),e("code",[t._v("address.city")]),t._v("が"),e("code",[t._v("tokyo")]),t._v("になってる人のデータを集計し、"),e("code",[t._v("age")]),t._v("を合計して表示しています。")]),t._v(" "),e("p",[t._v("aggregationで使える機能はたくさんあるので、色々と試してみてください。=> "),e("a",{attrs:{href:"https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Aggregation Pipeline Stages"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("例えば"),e("code",[t._v("$replaceRoot")]),t._v("というpipelineを使うとどうなるか試してみてください。")]),t._v(" "),e("div",{staticClass:"language-terminal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('db.people.aggregate([\n  { $match: {"address.city": "tokyo"} },\n  { $replaceRoot: {newRoot: "$address"} }\n])\n')])])]),e("p",[t._v("他には "),e("a",{attrs:{href:"https://docs.mongodb.com/manual/reference/operator/aggregation/unwind/",target:"_blank",rel:"noopener noreferrer"}},[t._v("$unwind"),e("OutboundLink")],1),t._v(" も面白い機能です。")]),t._v(" "),e("h2",{attrs:{id:"レプリカセット"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#レプリカセット"}},[t._v("#")]),t._v(" レプリカセット")]),t._v(" "),e("h3",{attrs:{id:"解説"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解説"}},[t._v("#")]),t._v(" 解説")]),t._v(" "),e("p",[t._v("MongoDBでは "),e("a",{attrs:{href:"https://docs.mongodb.com/manual/replication/",target:"_blank",rel:"noopener noreferrer"}},[t._v("レプリカセット"),e("OutboundLink")],1),t._v(" と呼ばれる構成を奇数台（最小3台）で構成することができます。")]),t._v(" "),e("p",[t._v("(以下画像は "),e("a",{attrs:{href:"https://docs.mongodb.com/manual/replication/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.mongodb.com/manual/replication/"),e("OutboundLink")],1),t._v(" より)")]),t._v(" "),e("p",[e("img",{attrs:{src:a(325),alt:"replica-set-primary-with-two-secondaries"}})]),t._v(" "),e("p",[t._v("通常ではクライアントやアプリケーションは「Primary」になっているMongoDBに対してデータを更新します。すると更新されたデータは「Secondary」にもレプリケーションされます。\nそしてレプリカセットを構成しているMongoDBはお互いに投票処理を行い、その結果によって自動的にPrimary役が決定されます。")]),t._v(" "),e("p",[t._v("もしPrimaryが停止したりネットワーク的に分断された場合、残り2台のMongoDB同士で通信（画像のHeartbeat通信）を行い、2台による投票処理によって自動的に次のPrimaryが決定します。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(326),alt:"replica-set-trigger-election"}})]),t._v(" "),e("p",[t._v("この時元々Primaryだったホストは他2台との通信ができなくなったことで、自動的にSecondaryとなり更新クエリを受け付けなくなります。")]),t._v(" "),e("h3",{attrs:{id:"ハンズオン"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ハンズオン"}},[t._v("#")]),t._v(" ハンズオン")]),t._v(" "),e("p",[t._v("実際にやってみましょう。今回用意したサンプルの"),e("code",[t._v("docker-compose.yml")]),t._v("では以下のホストを立ち上げています。")]),t._v(" "),e("ul",[e("li",[t._v("mongo-primary")]),t._v(" "),e("li",[t._v("mongo-secondary")]),t._v(" "),e("li",[t._v("mongo-arbiter")])]),t._v(" "),e("p",[t._v("この3台でレプリカセットを構築してみましょう。")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Aribiterとは？")]),t._v(" "),e("p",[t._v("先ほどMongoDBのレプリカセットは最低3台の奇数台で構成されると説明しました。\nこれは投票処理におけるsplit brainを防ぐためですが、一方でreplicationによるデータコピーは1台で十分というケースは多々あります。\nその場合3台目に1~2台目と同じスペックのサーバを用意するのは無駄です。そこで使われるのが「投票処理しか行わない」 "),e("a",{attrs:{href:"https://www.mongodb.com/docs/manual/core/replica-set-arbiter/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Arbiter"),e("OutboundLink")],1),t._v(" というサーバです。")]),t._v(" "),e("p",[t._v("Aribiterにはデータのreplicationが行われず、データの書き込みも読み込みもできません。レプリカセットに参加しPrimaryを選出するための投票処理しか行わないため、低スペックで安いサーバに構築することが可能です。")]),t._v(" "),e("p",[t._v("このハンズオンではArbiterのホストをMongoDB clientを起動するためのホストとして利用しています。")])]),t._v(" "),e("p",[t._v("先ほどと同様に、mongo-arbiterホストから"),e("code",[t._v("mongo-primary")]),t._v("のコンソールに入り、レプリカセットの設定をします。")]),t._v(" "),e("div",{staticClass:"language-terminal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ docker compose exec mongo-arbiter mongo --port 27017 --host mongo-primary\nrs.reconfig( {\n   _id : "mongo-set",\n   members: [\n      { _id: 0, host: "mongo-primary:27017", priority: 2 },\n      { _id: 1, host: "mongo-secondary:27018", priority: 1 },\n      { _id: 2, host: "mongo-arbiter:27019", priority: 0 }\n   ]\n})\n')])])]),e("p",[t._v("以下のような結果が返ってくるはずです。")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ok"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"$clusterTime"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"clusterTime"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Timestamp("),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1659236394")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(")"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"signature"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hash"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" BinData("),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AAAAAAAAAAAAAAAAAAAAAAAAAAA="')]),t._v(")"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"keyId"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NumberLong("),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(")\n\t\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"operationTime"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Timestamp("),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1659236394")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(")\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("すると残りの2台にも設定が反映され、レプリカセットが構築されます。mongo-secondaryのコンソールで"),e("code",[t._v("rs.status()")]),t._v("を実行し、設定状況を確認してみてください。")]),t._v(" "),e("div",{staticClass:"language-terminal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ docker compose exec mongo-arbiter mongo --port 27018 --host mongo-secondary\n\nmongo-set:SECONDARY> rs.status() # 設定確認\n")])])]),e("p",[e("code",[t._v('"ok" : 1')]),t._v("などでレプリカセットの正常性を確認できます。")]),t._v(" "),e("p",[t._v("以下のようにsecondaryにprimaryからデータがreplicateされていることが確認できます。")]),t._v(" "),e("div",{staticClass:"language-terminal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('mongo-set:SECONDARY> rs.secondaryOk()\nmongo-set:SECONDARY> use bootcamp-db\nswitched to db bootcamp-db\nmongo-set:SECONDARY> db.people.find()\n{ "_id" : ObjectId("610674ca6c750f55ca8b580d"), "name" : "tanaka-san", "age" : 22 }\n{ "_id" : ObjectId("610674ce6c750f55ca8b580e"), "name" : "sato-san", "age" : 25 }\n{ "_id" : ObjectId("610674d46c750f55ca8b580f"), "name" : "watanabe-san", "age" : 23, "address" : "tokyo" }\n{ "_id" : ObjectId("610674d86c750f55ca8b5810"), "name" : "fujimoto-san", "age" : 23, "address" : { "post" : "123-4567", "city" : "tokyo" } }\n{ "_id" : ObjectId("610674dc6c750f55ca8b5811"), "name" : "kawai-san", "age" : 30, "address" : { "post" : "123-9876", "city" : "tokyo" } }\n')])])]),e("p",[t._v("ここで例えばPrimaryのMongoDBを落としてみましょう")]),t._v(" "),e("div",{staticClass:"language-terminal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ docker compose stop mongo-primary\n[+] Running 1/1\n ⠿ Container bootcamp-mongodb-sample-mongo-primary-1  Stopped                                                                                  11.1s\n$ docker compose ps\nNAME                                        COMMAND                  SERVICE             STATUS              PORTS\nbootcamp-mongodb-sample-mongo-arbiter-1     "docker-entrypoint.s…"   mongo-arbiter       running             0.0.0.0:27019->27019/tcp, :::27019->27019/tcp\nbootcamp-mongodb-sample-mongo-primary-1     "docker-entrypoint.s…"   mongo-primary       exited (137)\nbootcamp-mongodb-sample-mongo-secondary-1   "docker-entrypoint.s…"   mongo-secondary     running             0.0.0.0:27018->27018/tcp, :::27018->27018/tcp                                                                     :::27018->27018/tcp\n')])])]),e("p",[t._v("するとSecondaryのプロンプトが"),e("code",[t._v("mongo-set:PRIMARY>")]),t._v("に変わるのが確認できます。")]),t._v(" "),e("div",{staticClass:"language-terminal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("mongo-set:SECONDARY>\nmongo-set:PRIMARY>\nmongo-set:PRIMARY>\nmongo-set:PRIMARY>\n")])])]),e("p",[e("code",[t._v("rs.status()")]),t._v("をもう一度Secondaryで叩いてみてください。先ほどとどう変わったでしょうか。")]),t._v(" "),e("credit-footer")],1)}),[],!1,null,null,null);e.default=o.exports}}]);