(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{439:function(t,s,e){"use strict";e.r(s);var a=e(10),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("header-table"),t._v(" "),s("h2",{attrs:{id:"dockerコンテナの管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerコンテナの管理"}},[t._v("#")]),t._v(" Dockerコンテナの管理")]),t._v(" "),s("p",[t._v("前回は、Dockerコンテナのイメージの取得からコンテナの構築までを行いました。\nしかし、先ほどの講義では取得したイメージがきちんと取得できているのか？\n起動したコンテナが間違いなく起動しているのか？といった事の確認ができていません。\nコンテナの活用にはこういったDockerコンテナの管理が必要不可欠になります。\n従って本講では、Dockerコンテナを管理する為のコマンドを学習します。")]),t._v(" "),s("h3",{attrs:{id:"docker-images"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-images"}},[t._v("#")]),t._v(" docker images")]),t._v(" "),s("p",[s("code",[t._v("docker images")]),t._v(" コマンドは、ローカル環境に存在するDocker イメージの一覧を表示するコマンドです。現状では、「getting-started」イメージのみが存在すると思います。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" images\nREPOSITORY                    TAG                 IMAGE ID            CREATED             SIZE\ndocker/getting-started                                                    latest       cb90f98fd791   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" months ago    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(".8MB\n")])])]),s("p",[t._v("Dockerイメージには、名前の他に「TAG」を付けることができます。TAGでは、主にバージョンを管理していることが多いです。今回表示されている「latest」は最新版であることを意味しています。")]),t._v(" "),s("h3",{attrs:{id:"docker-ps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-ps"}},[t._v("#")]),t._v(" docker ps")]),t._v(" "),s("p",[s("code",[t._v("docker ps")]),t._v(" コマンドは、ローカル環境に存在するDockerコンテナに関する情報を表示してくれます。現在起動しているコンテナは"),s("code",[t._v("docker ps")]),t._v(" と入力すると表示されます。\nしかしながら今の状態で本コマンドを実行してもヘッダー情報だけで何も表示されないと思います。\nと言うのも"),s("code",[t._v("docker ps")]),t._v("コマンドのデフォルトの動作で表示されるのは永続的に稼働しているコンテナだけだからです。\n既に終了してしまったり、エラーで起動できていないコンテナを確認するためには、オプションで"),s("code",[t._v("-a")]),t._v(" を付けることで表示可能です。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -a\nCONTAINER ID   IMAGE                    COMMAND                  CREATED         STATUS    PORTS     NAMES\nf908c593f036   docker/getting-started   "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/docker-entrypoint.…"')]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" seconds ago   Created             getting-started\n")])])]),s("h3",{attrs:{id:"docker-start、stop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-start、stop"}},[t._v("#")]),t._v(" docker start、stop")]),t._v(" "),s("p",[s("code",[t._v("docker start")]),t._v(" は、コンテナの起動を行うコマンドで、"),s("code",[t._v("docker stop")]),t._v(" は、コンテナを停止するコマンドです。これらのコマンドでは、起動・停止対象のコンテナを選択する必要があるため、引数として"),s("code",[t._v("docker ps")]),t._v(" の表示結果にあった「CONTAINER ID」を設定します。")]),t._v(" "),s("p",[t._v("先ほどの項では"),s("code",[t._v("docker/getting-started")]),t._v("コンテナの起動に"),s("code",[t._v("docker start")]),t._v("を使用していました。\n従って、"),s("code",[t._v("docker/getting-started")]),t._v("コンテナの停止したい時は"),s("code",[t._v("docker stop")]),t._v("を使う事になります。")]),t._v(" "),s("p",[t._v("では、実際に"),s("code",[t._v("docker stop")]),t._v("を使う演習をしてみましょう。\n先ほどは、"),s("code",[t._v("docker/getting-started")]),t._v("をそのまま起動していましたが今回は、daemon動作として簡単なコンテナを作り、それを停止してみましょう。")]),t._v(" "),s("h4",{attrs:{id:"コンテナの起動"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#コンテナの起動"}},[t._v("#")]),t._v(" コンテナの起動")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v(" $ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(":80 docker/getting-started\n")])])]),s("h4",{attrs:{id:"起動確認"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#起動確認"}},[t._v("#")]),t._v(" 起動確認")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v(" $ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v("\nCONTAINER ID   IMAGE                    COMMAND                  CREATED         STATUS         PORTS                                   NAMES\n6d868b858fd7   docker/getting-started   "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/docker-entrypoint.…"')]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" seconds ago   Up "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" seconds   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:8080-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("/tcp, :::8080-"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("/tcp   interesting_darwin\n")])])]),s("h4",{attrs:{id:"コンテナの停止"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#コンテナの停止"}},[t._v("#")]),t._v(" コンテナの停止")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v(" $ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" stop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("CONTAINER ID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h3",{attrs:{id:"docker-rm、rmi"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-rm、rmi"}},[t._v("#")]),t._v(" docker rm、rmi")]),t._v(" "),s("p",[s("code",[t._v("docker rm")]),t._v(" と"),s("code",[t._v("docker rmi")]),t._v(" は、それぞれDocker コンテナ、Docker イメージの削除を行うコマンドです。それぞれ引数に「CONTAINER ID」や「IMAGE ID」を設定する必要があります。また、削除したいDocker イメージを元に作成したDocker コンテナが存在する場合削除できません。その際は、事前にDocker コンテナを削除した後に、Docker イメージを削除してください。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" docker/getting-started\ndocker/getting-started\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" rmi docker/getting-started\ndocker/getting-started\n")])])]),s("h2",{attrs:{id:"まとめ"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#まとめ"}},[t._v("#")]),t._v(" まとめ")]),t._v(" "),s("p",[t._v("ここまで実施することでDockerコンテナの取得から後片付けまでの一通りの作業ができるようになりました。\nしかし、実際に自分好みのDockerイメージを作るにはどうすれば良いでしょうか。\n次項ではDockerイメージの作り方について学びたいと思います。")]),t._v(" "),s("credit-footer")],1)}),[],!1,null,null,null);s.default=r.exports}}]);